<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <name>fox engine - Webapp - Explorer V2</name>
  <groupId>com.camunda.fox.engine</groupId>
  <artifactId>fox-engine-webapp-explorer2</artifactId>
  <packaging>war</packaging>

  <parent>
    <groupId>com.camunda.fox.engine</groupId>
    <artifactId>fox-engine-root</artifactId>
    <relativePath>../..</relativePath>
    <version>1.30.0-SNAPSHOT</version>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <build>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<configuration>
				<source>1.5</source>
				<target>1.5</target>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.zeroturnaround</groupId>
			<artifactId>jrebel-maven-plugin</artifactId>
			<executions>
				<execution>
					<id>generate-rebel-xml</id>
					<phase>process-resources</phase>
					<goals>
						<goal>generate</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2.1</version>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/ui-jar.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>

      <!-- Compile custom GWT components or widget dependencies with the GWT compiler 
           Needed for eg. Animator component 
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>2.1.0-1</version>
        <configuration>
          <webappDirectory>src/main/webapp/VAADIN/widgetsets</webappDirectory>
          <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
         <runTarget>activiti-webapp-explorer2</runTarget>
          <hostedWebapp>src/main/webapp</hostedWebapp>
          <noServer>true</noServer>
          <port>8080</port>
          <soyc>false</soyc> 
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>resources</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>1.0.1</version>
        <configuration>
          <modules>
            <module>org.vaadin.jouni.animator.AnimatorWidgetset</module>
          </modules>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>update-widgetset</goal>
            </goals>
          </execution>
        </executions>
      </plugin> -->

      <!-- A simple Jetty test server at http://localhost:8080/activiti-webapp-explorer2 can be launched with the Maven goal jetty:run 
        and stopped with jetty:stop -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.24</version>
        <configuration>
          <stopPort>9966</stopPort>
          <stopKey>activiti-webapp-explorer2</stopKey>
          <!-- Redeploy every x seconds if changes are detected, 0 for no automatic redeployment -->
          <scanIntervalSeconds>0</scanIntervalSeconds>
          <!-- make sure Jetty also finds the widgetset -->
          <webAppConfig>
            <contextPath>/activiti-explorer2</contextPath>
            <baseResource implementation="org.mortbay.resource.ResourceCollection">
              <!-- Workaround for Maven/Jetty issue http://jira.codehaus.org/browse/JETTY-680 -->
              <!-- <resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources> -->
              <resourcesAsCSV>src/main/webapp</resourcesAsCSV>
            </baseResource>
          </webAppConfig>
        </configuration>
      </plugin>
    </plugins>
	<pluginManagement>
		<plugins>
			<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>
										org.zeroturnaround
									</groupId>
									<artifactId>
										jrebel-maven-plugin
									</artifactId>
									<versionRange>
										[1.0.7,)
									</versionRange>
									<goals>
										<goal>generate</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<ignore />
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>
		</plugins>
	</pluginManagement>
  </build>

  <dependencies>
    <!-- Activiti -->
    <dependency>
      <groupId>com.camunda.fox.engine</groupId>
      <artifactId>fox-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>com.camunda.fox.engine</groupId>
      <artifactId>fox-engine-spring</artifactId>
      <version>${project.version}</version>
    </dependency>
    
    <!-- Vaadin -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin</artifactId>
    </dependency>
    
    <!-- Database -->
    <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    
    <!-- Spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>    
     <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.framework.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thebuzzmedia</groupId>
      <artifactId>imgscalr-lib</artifactId>
      <version>3.1</version>
    </dependency>
    
    <!-- Running example processes -->
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
    </dependency>
    
    <!-- Testing -->
	  <dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	  </dependency>
   
  </dependencies>
  
  <repositories>
    <repository>
      <id>buzzmedia</id>
      <url>http://maven.thebuzzmedia.com</url> <!-- ImageScalr -->
    </repository>
  </repositories>

</project>
