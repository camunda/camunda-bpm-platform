<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <description>
    Assembles the camunda BPM platform and makes it ready for qa. 
    The assembly is installed to maven later in the reactor, if the integration tests pass sucessfully
  </description>

  <artifactId>camunda-glassfish-assembly</artifactId>
  <packaging>pom</packaging>

  <parent>
    <groupId>org.camunda.bpm.glassfish</groupId>
    <artifactId>camunda-glassfish</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <name>camunda BPM - Glassfish 3.1.x Assembly</name>

  <dependencies>

	<dependency>
		<groupId>org.glassfish.main.distributions</groupId>
		<artifactId>glassfish</artifactId>
		<version>${version.glassfish}</version>
		<type>zip</type>
		<exclusions>
        
        <!-- This keeps maven from downloading a bunch of poms we do not need. 
             We just need the glassfish zip distribution. 
             For some reason the pom for that depends on all these other poms which again
             transitively pull in every pom used in the appserver.
             
             NOTE: if you do an upgrade to a new glassfish version, check the
             org.glassfish.distributions:glassfish pom for new dependencies and if
             they added some, exclude these as well. (DM)  -->
        
        <exclusion>
          <groupId>org.glassfish.distributions</groupId>
          <artifactId>web</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-common-full</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-ejb</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-cmp</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-corba</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>metro</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-appclient</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>glassfish-jms</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>mq</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.registration</groupId>
          <artifactId>servicetag-registry</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.packager</groupId>
          <artifactId>legal-fragment</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.javaee</groupId>
      <artifactId>camunda-ejb-client</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.glassfish</groupId>
      <artifactId>camunda-glassfish-ear</artifactId>
      <version>${project.version}</version>
      <type>ear</type>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.glassfish</groupId>
      <artifactId>camunda-glassfish-service</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.identity</groupId>
      <artifactId>camunda-identity-ldap</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.connect</groupId>
      <artifactId>camunda-connect-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>        
    </dependency>

    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
    </dependency>

    <dependency>
    	<groupId>org.camunda.bpm.javaee</groupId>
    	<artifactId>camunda-jobexecutor-rar</artifactId>
    	<version>${project.version}</version>
    	<type>rar</type>
    </dependency>

    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.template-engines</groupId>
      <artifactId>camunda-template-engines-freemarker</artifactId>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>target/filtered-resources</outputDirectory>
              <resources>
                <resource>                  
                  <directory>src/</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>domain.xml</include>
                  </includes>
                </resource>
              </resources>
              <useDefaultDelimiters>false</useDefaultDelimiters>
              <delimiters>
                <delimiter>#{*}</delimiter>
              </delimiters>
            </configuration>
          </execution>
        </executions>
      </plugin>
        
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
              <attach>true</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <outputDirectory>target/</outputDirectory>
              <workDirectory>target/assembly/work</workDirectory>
              <tarLongFileMode>gnu</tarLongFileMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
