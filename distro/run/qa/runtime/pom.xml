<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.bpm.run</groupId>
    <artifactId>camunda-bpm-run-qa</artifactId>
    <version>7.17.0-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

  <artifactId>camunda-bpm-run-qa-runtime</artifactId>
  <name>Camunda Platform - Run - QA - Runtime</name>
  <packaging>jar</packaging>
  
  <properties>
    <run-home>${project.build.directory}/run/camunda-bpm-run-distro</run-home>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.camunda.bpm.run</groupId>
      <artifactId>camunda-bpm-run</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <!-- exclude Groovy 2.4.13 so that it doesn't conflict with the REST Assured version.
               The groovy-all JAR will still be present in the ZIP archive. -->
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.run</groupId>
      <artifactId>camunda-bpm-run-qa-integration-tests</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <classifier>tests</classifier>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- JNA needed for Managed Container -->
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna-platform</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- REST -->
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- SpringBoot BOM excludes commons-logging, so we need to add it explicitly -->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Webapps -->
    <dependency>
      <groupId>org.camunda.bpm.qa</groupId>
      <artifactId>camunda-qa-integration-tests-webapps</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.model</groupId>
      <artifactId>camunda-bpmn-model</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-apache-client4</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <profiles>
    <profile>
      <id>integration-test-camunda-run</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.16</version>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <dependenciesToScan>
                <dependenciesToScan>org.camunda.bpm.run:camunda-bpm-run-qa-integration-tests</dependenciesToScan>
              </dependenciesToScan>
              <systemPropertyVariables>
                <camunda.run.home>${run-home}</camunda.run.home>
                <selenium.screenshot.directory>${project.build.directory}/selenium-screenshots</selenium.screenshot.directory>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>default</id>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <phase>generate-test-resources</phase>
                <configuration>
                  <includeArtifactIds>camunda-bpm-run</includeArtifactIds>
                  <overWriteSnapshots>true</overWriteSnapshots>
                  <excludeTransitive>true</excludeTransitive>
                  <outputDirectory>${run-home}</outputDirectory>
                  <excludes>configuration/default.yml,configuration/production.yml</excludes>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.googlecode.maven-download-plugin</groupId>
            <artifactId>download-maven-plugin</artifactId>
            <version>1.3.0</version>
            <executions>
              <execution>
                <phase>process-resources</phase>
                <goals>
                  <goal>wget</goal>
                </goals>
                <configuration>
                  <url>https://chromedriver.storage.googleapis.com/${version.chromedriver}/chromedriver_${os.type}.zip</url>
                  <outputFileName>chromedriver.zip</outputFileName>
                  <unpack>true</unpack>
                  <outputDirectory>${project.build.directory}/chromedriver</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <os.type>win32</os.type>
      </properties>
    </profile>
    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <os.type>mac64</os.type>
      </properties>
    </profile>
  </profiles>

</project>