<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.bpm.wildfly</groupId>
    <artifactId>camunda-wildfly</artifactId>
    <version>7.4.0-SNAPSHOT</version>
  </parent>

  <artifactId>camunda-wildfly-modules</artifactId>
  <packaging>jar</packaging>
  <name>camunda BPM - Wildfly Modules</name>

  <properties>
    <org.jboss.shrinkwrap.resolver.version>1.0.0-beta-5</org.jboss.shrinkwrap.resolver.version>
    <version.jackson>2.5.3</version.jackson>
    <version.jackson.annotations>2.5.0</version.jackson.annotations>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm.wildfly</groupId>
      <artifactId>camunda-wildfly-subsystem</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-email</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-lang</groupId>
          <artifactId>commons-lang</artifactId>
        </exclusion>
        <exclusion>
          <groupId>joda-time</groupId>
          <artifactId>joda-time</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.identity</groupId>
      <artifactId>camunda-identity-ldap</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-spin</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-dataformat-json-jackson</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-dataformat-xml-dom</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-connect</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.connect</groupId>
      <artifactId>camunda-connect-http-client</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.connect</groupId>
      <artifactId>camunda-connect-soap-http-client</artifactId>
    </dependency>

    <!-- script engine dependencies -->
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
    </dependency>

    <!-- template engine dependencies -->
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
    </dependency>

    <dependency>
      <groupId>org.camunda.template-engines</groupId>
      <artifactId>camunda-template-engines-freemarker</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.7</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <dependencyfilesets scopes="compile" />

                <mkdir dir="target/modules" />

                <!-- copy all files -->
                <copy todir="target/modules" flatten="false">
                  <fileset refid="maven.project.dependencies" />
                  <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                </copy>

                <delete dir="target/modules/org/camunda/bpm" />

                <!-- copy all files again, but this only matches fox files and this treatment makes is maven 2/3 compatible => timestamped snapshot -->
                <copy todir="target/modules" flatten="false">
                  <fileset refid="maven.project.dependencies" />
                  <mapper>
                    <chainedmapper>
                      <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                      <regexpmapper from="^(org.camunda.bpm.*)/((camunda-[A-Za-z-]*)[0-9\.]*).*.jar$$" to="\1/\3${project.version}.jar" handledirsep="yes" />
                    </chainedmapper>
                  </mapper>
                </copy>

                <delete dir="target/modules/org/camunda/spin" />
                <copy todir="target/modules" flatten="false">
                  <fileset refid="maven.project.dependencies" />
                  <mapper>
                    <chainedmapper>
                      <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                      <regexpmapper from="^(org.camunda.spin.*)/((camunda-[A-Za-z-]*)[0-9\.]*).*.jar$$" to="\1/\3${version.camunda.spin}.jar" handledirsep="yes" />
                    </chainedmapper>
                  </mapper>
                </copy>

                <delete dir="target/modules/org/camunda/connect" />
                <copy todir="target/modules" flatten="false">
                  <fileset refid="maven.project.dependencies" />
                  <mapper>
                    <chainedmapper>
                      <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                      <regexpmapper from="^(org.camunda.connect.*)/((camunda-[A-Za-z-]*)[0-9\.]*).*.jar$$" to="\1/\3${version.camunda.connect}.jar" handledirsep="yes" />
                    </chainedmapper>
                  </mapper>
                </copy>

                <!-- copy jackson dependencies to slot -->
                <delete dir="target/modules/com/fasterxml/jackson" />
                <copy todir="target/modules" flatten="false">
                  <fileset refid="maven.project.dependencies" />
                  <mapper>
                    <chainedmapper>
                      <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/${version.jackson}/\3" handledirsep="yes" />
                      <regexpmapper from="^(com.fasterxml.jackson.*/.*.jar)$$" to="\1" handledirsep="yes" />
                    </chainedmapper>
                  </mapper>
                </copy>

                <delete dir="target/modules/com/fasterxml/jackson/core/jackson-annotations" />
                <copy todir="target/modules" flatten="false">
                  <fileset refid="maven.project.dependencies" />
                  <mapper>
                    <chainedmapper>
                      <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/${version.jackson.annotations}/\3" handledirsep="yes" />
                      <regexpmapper from="^(com.fasterxml.jackson.core.jackson-annotations/.*.jar)$$" to="\1" handledirsep="yes" />
                    </chainedmapper>
                  </mapper>
                </copy>

                <delete dir="target/modules/org/camunda/dmn" />
                <copy todir="target/modules" flatten="false">
                  <fileset refid="maven.project.dependencies" />
                  <mapper>
                    <chainedmapper>
                      <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\1/main/\3" handledirsep="yes" />
                      <regexpmapper from="^(org.camunda.dmn.*)/((camunda-[A-Za-z-]*)[0-9\.]*).*.jar$$" to="\1/\3${project.version}.jar" handledirsep="yes" />
                    </chainedmapper>
                  </mapper>
                </copy>


                <copy todir="target/modules" flatten="false">
                  <fileset dir="src/main/modules" />
                </copy>

                <replace dir="target/modules" token="@project.version@" value="${project.version}">
                  <include name="**/module.xml" />
                </replace>

                <replace dir="target/modules" token="@version.camunda.commons@" value="${version.camunda.commons}">
                  <include name="**/module.xml" />
                </replace>

                <replace dir="target/modules" token="@version.camunda.spin@" value="${version.camunda.spin}">
                  <include name="**/module.xml" />
                </replace>

                <replace dir="target/modules" token="@version.camunda.connect@" value="${version.camunda.connect}">
                  <include name="**/module.xml" />
                </replace>

                <replace dir="target/modules" token="@version.camunda.template-engines@" value="${version.camunda.template-engines}">
                  <include name="**/module.xml" />
                </replace>

                <replace dir="target/modules" token="@version.jackson@" value="${version.jackson}">
                  <include name="**/module.xml" />
                </replace>

                <replace dir="target/modules" token="@version.jackson.annotations@" value="${version.jackson.annotations}">
                  <include name="**/module.xml" />
                </replace>

              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
       <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>joda-time</groupId>
                  <artifactId>joda-time</artifactId>
                  <outputDirectory>${project.build.directory}/modules/org/joda/time/2.1/</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <classesDirectory>${project.build.directory}/modules/</classesDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
