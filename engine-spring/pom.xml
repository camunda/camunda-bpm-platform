<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.bpm</groupId>
    <artifactId>camunda-database-settings</artifactId>
    <relativePath>../database</relativePath>
    <version>7.20.0-SNAPSHOT</version>
  </parent>

  <artifactId>camunda-spring-compatibility-root</artifactId>

  <packaging>pom</packaging>
  <name>Camunda Platform - engine - Spring - Root</name>

  <!--
  Why this module structure?
  Core is the user-facing camunda-engine-spring artifact and is compiled against Spring 5 and JPA 2.0.
  The compatibility module runs the tests contained in core with Spring 4 respectively.
  This is implemented as separate modules and not as profiles of the core module, in order
  to test the artifact that was compiled against Spring 5 (i.e. to ensure binary compatibility).
  -->
  <modules>
    <module>core</module>
    <module>compatibility-test-spring4</module>
  </modules>

  <profiles>
    <profile>
      <id>jdk17</id>
      <activation>
        <jdk>[17,)</jdk>
      </activation>
      <modules>
        <module>core-6</module>
      </modules>
    </profile>
  </profiles>

  
</project>
