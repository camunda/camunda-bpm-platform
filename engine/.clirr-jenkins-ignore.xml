<differences>
  <difference>
    <!-- It is okay to add classes to the set of superclasses -->
    <className>**</className>
    <differenceType>5000</differenceType>
    <to>**</to>
  </difference>
  <difference>
    <!-- It is okay to add methods to an interface-->
    <className>**</className>
    <differenceType>7012</differenceType>
    <method>*</method>
  </difference>

  <!-- 8001: class removed -->
  <!-- class removed from public API due to CAM-4307 -->
  <difference>
    <differenceType>8001</differenceType>
    <className>org/camunda/bpm/engine/history/UserOperationLogContext</className>
  </difference>
  <!-- package moved into typed-values module of camunda-commons project -->
  <difference>
    <differenceType>8001</differenceType>
    <className>org/camunda/bpm/engine/variable/**/*</className>
  </difference>
  <!-- 5001: superclass removed -->
  <!-- new interface introduced in hierarchy, previous superclass renamed -->
  <difference>
    <differenceType>5001</differenceType>
    <className>org/camunda/bpm/engine/test/mock/MockExpressionManager</className>
    <to>**</to>
  </difference>
  <!-- 5001: superclass removed -->
  <!-- new JUEL module with different package names -->
  <difference>
    <differenceType>5001</differenceType>
    <className>org/camunda/bpm/engine/test/mock/MockElResolver</className>
    <to>**</to>
  </difference>
  <!-- 6004: field type changed -->
  <!-- new JUEL module with different package names -->
  <difference>
    <differenceType>6004</differenceType>
    <className>org/camunda/bpm/application/AbstractProcessApplication</className>
    <field>processApplication*ElResolver</field>
    <from>**</from>
    <to>**</to>
  </difference>
  <!-- 7006: method return type changed -->
  <!-- new JUEL module with different package names -->
  <difference>
    <differenceType>7006</differenceType>
    <className>org/camunda/bpm/application/AbstractProcessApplication</className>
    <method>*ElResolver*</method>
    <to>**</to>
  </difference>
  <!-- 7006: method return type changed -->
  <!-- new JUEL module with different package names -->
  <difference>
    <differenceType>7006</differenceType>
    <className>org/camunda/bpm/application/ProcessApplicationElResolver</className>
    <method>*ElResolver*</method>
    <to>**</to>
  </difference>
  <!-- 7006: method return type changed -->
  <!-- new JUEL module with different package names -->
  <difference>
    <differenceType>7006</differenceType>
    <className>org/camunda/bpm/application/ProcessApplicationInterface</className>
    <method>*ElResolver*</method>
    <to>**</to>
  </difference>
  <!-- 7006: method return type changed -->
  <!-- new JUEL module with different package names -->
  <difference>
    <differenceType>7006</differenceType>
    <className>org/camunda/bpm/engine/test/mock/MockExpressionManager</className>
    <method>*ElResolver*</method>
    <to>**</to>
  </difference>
  <!-- 7005: method parameter type changed -->
  <!-- new JUEL module with different package names -->
  <difference>
    <differenceType>7005</differenceType>
    <className>org/camunda/bpm/engine/test/mock/MockElResolver</className>
    <method>*ELContext*</method>
    <to>**</to>
  </difference>

  <!-- 6001: removed field -->
  <!-- removed feature: handling JPA entities as variables-->
  <difference>
    <differenceType>6001</differenceType>
    <className>org/camunda/bpm/engine/ProcessEngineConfiguration</className>
    <field>jpa**</field>
  </difference>
  <!-- 7002: removed method -->
  <!-- removed feature: handling JPA entities as variables-->
  <difference>
    <differenceType>7002</differenceType>
    <className>org/camunda/bpm/engine/ProcessEngineConfiguration</className>
    <method>**Jpa**</method>
  </difference>
</differences>
