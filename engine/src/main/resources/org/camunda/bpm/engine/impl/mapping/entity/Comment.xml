<?xml version="1.0" encoding="UTF-8" ?>

<!--
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.camunda.bpm.engine.impl.persistence.entity.CommentEntity">
  
  <!-- COMMENT INSERT -->
  
  <insert id="insertComment" parameterType="org.camunda.bpm.engine.impl.persistence.entity.CommentEntity">
    insert into ${prefix}ACT_HI_COMMENT (ID_, TYPE_, TIME_, USER_ID_, TASK_ID_, PROC_INST_ID_, ACTION_, MESSAGE_, FULL_MSG_, TENANT_ID_)
    values (
      #{id ,jdbcType=VARCHAR},
      #{type ,jdbcType=VARCHAR},
      #{time ,jdbcType=TIMESTAMP},
      #{userId ,jdbcType=VARCHAR},
      #{taskId ,jdbcType=VARCHAR},
      #{processInstanceId ,jdbcType=VARCHAR},
      #{action ,jdbcType=VARCHAR},
      #{message ,jdbcType=VARCHAR},
      #{fullMessageBytes ,jdbcType=BLOB},
      #{tenantId ,jdbcType=VARCHAR}
    )
  </insert>

  <insert id="insertComment_postgres" parameterType="org.camunda.bpm.engine.impl.persistence.entity.CommentEntity">
    insert into ${prefix}ACT_HI_COMMENT (ID_, TYPE_, TIME_, USER_ID_, TASK_ID_, PROC_INST_ID_, ACTION_, MESSAGE_, FULL_MSG_, TENANT_ID_)
    values (
      #{id ,jdbcType=VARCHAR},
      #{type ,jdbcType=VARCHAR},
      #{time ,jdbcType=TIMESTAMP},
      #{userId ,jdbcType=VARCHAR},
      #{taskId ,jdbcType=VARCHAR},
      #{processInstanceId ,jdbcType=VARCHAR},
      #{action ,jdbcType=VARCHAR},
      #{message ,jdbcType=VARCHAR},
      #{fullMessageBytes ,jdbcType=BINARY},
      #{tenantId ,jdbcType=VARCHAR}
    )
  </insert>

  <!-- COMMENT DELETE -->

  <delete id="deleteCommentsByTaskId" parameterType="string">
    delete from ${prefix}ACT_HI_COMMENT where TASK_ID_ = #{taskId} 
  </delete>

  <!-- COMMENT RESULTMAP -->

  <resultMap id="commentResultMap" type="org.camunda.bpm.engine.impl.persistence.entity.CommentEntity">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="type" column="TYPE_" jdbcType="VARCHAR" />
    <result property="userId" column="USER_ID_" jdbcType="VARCHAR" />
    <result property="time" column="TIME_" jdbcType="TIMESTAMP" />
    <result property="taskId" column="TASK_ID_" jdbcType="VARCHAR" />
    <result property="processInstanceId" column="PROC_INST_ID_" jdbcType="VARCHAR" />
    <result property="action" column="ACTION_" jdbcType="VARCHAR" />
    <result property="message" column="MESSAGE_" jdbcType="VARCHAR" />
    <result property="fullMessageBytes" column="FULL_MSG_" jdbcType="BLOB" />
    <result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="commentResultMap_postgres" type="org.camunda.bpm.engine.impl.persistence.entity.CommentEntity">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="type" column="TYPE_" jdbcType="VARCHAR" />
    <result property="userId" column="USER_ID_" jdbcType="VARCHAR" />
    <result property="time" column="TIME_" jdbcType="TIMESTAMP" />
    <result property="taskId" column="TASK_ID_" jdbcType="VARCHAR" />
    <result property="processInstanceId" column="PROC_INST_ID_" jdbcType="VARCHAR" />
    <result property="action" column="ACTION_" jdbcType="VARCHAR" />
    <result property="message" column="MESSAGE_" jdbcType="VARCHAR" />
    <result property="fullMessageBytes" column="FULL_MSG_" jdbcType="BINARY" />
    <result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- COMMENT SELECT -->

  <select id="selectCommentsByTaskId" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="commentResultMap">
    select * 
    from ${prefix}ACT_HI_COMMENT 
    where TASK_ID_ = #{parameter,jdbcType=VARCHAR}
      and TYPE_ = 'comment'
    order by TIME_ desc
  </select>

  <select id="selectCommentsByTaskId_postgres" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="commentResultMap_postgres">
    select * 
    from ${prefix}ACT_HI_COMMENT 
    where TASK_ID_ = #{parameter,jdbcType=VARCHAR}
      and TYPE_ = 'comment'
    order by TIME_ desc
  </select>

  <select id="selectEventsByTaskId" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="commentResultMap">
    <include refid="selectEventsByTaskIdSql"/>
  </select>
  
  <select id="selectEventsByTaskId_postgres" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="commentResultMap_postgres">
    <include refid="selectEventsByTaskIdSql"/>
  </select>

  <sql id="selectEventsByTaskIdSql">
    <include refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.bindOrderBy"/>
    ${limitBefore}
    select distinct RES.* ${limitBetween}
    from (
        select
          ID_,
          TYPE_,
          TIME_,
          USER_ID_,
          TASK_ID_,
          PROC_INST_ID_,
          ACTION_,
          MESSAGE_
        from ${prefix}ACT_HI_COMMENT
        where TASK_ID_ = #{parameter,jdbcType=VARCHAR}
     UNION
     select
        ID_ as ID_,
        ${constant.event} as TYPE_,
        TIMESTAMP_ as TIME_,
        USER_ID_ as USER_ID_,
        TASK_ID_ as TASK_ID_,
        PROC_INST_ID_ as PROC_INST_ID_,
        OPERATION_TYPE_ as ACTION_,
        ${constant.op_message} as MESSAGE_
        from ${prefix}ACT_HI_OP_LOG
        where TASK_ID_ = #{parameter,jdbcType=VARCHAR}
        and OPERATION_TYPE_ in ('AddUserLink',
                                'DeleteUserLink',
                                'AddGroupLink',
                                'DeleteGroupLink')
     UNION
     select
        ID_ as ID_,
        ${constant.event} as TYPE_,
        TIMESTAMP_ as TIME_,
        USER_ID_ as USER_ID_,
        TASK_ID_ as TASK_ID_,
        PROC_INST_ID_ as PROC_INST_ID_,
        OPERATION_TYPE_ as ACTION_,
        NEW_VALUE_ as MESSAGE_
        from ${prefix}ACT_HI_OP_LOG
        where TASK_ID_ = #{parameter,jdbcType=VARCHAR}
        and OPERATION_TYPE_ in ('AddAttachment',
                                'DeleteAttachment')
    ) RES
    order by ${orderBy}
    ${limitAfter}
  </sql>

  <select id="selectCommentsByProcessInstanceId" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="commentResultMap">
    select * 
    from ${prefix}ACT_HI_COMMENT 
    where PROC_INST_ID_ = #{parameter,jdbcType=VARCHAR}
    order by TIME_ desc
  </select>

  <select id="selectCommentsByProcessInstanceId_postgres" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="commentResultMap_postgres">
    select * 
    from ${prefix}ACT_HI_COMMENT 
    where PROC_INST_ID_ = #{parameter,jdbcType=BINARY}
    order by TIME_ desc
  </select>

  <select id="selectCommentByTaskIdAndCommentId" parameterType="map" resultMap="commentResultMap">
    select * from ${prefix}ACT_HI_COMMENT 
    where TASK_ID_ = #{taskId,jdbcType=VARCHAR}
      and ID_ =  #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectCommentByTaskIdAndCommentId_postgres" parameterType="map" resultMap="commentResultMap_postgres">
    select * from ${prefix}ACT_HI_COMMENT 
    where TASK_ID_ = #{taskId,jdbcType=VARCHAR}
      and ID_ =  #{id,jdbcType=VARCHAR}
  </select>

</mapper>
