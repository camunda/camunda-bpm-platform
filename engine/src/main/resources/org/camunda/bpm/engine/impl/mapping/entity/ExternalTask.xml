<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.camunda.bpm.engine.impl.persistence.entity.ExternalTaskEntity">

  <resultMap id="externalTaskResultMap" type="org.camunda.bpm.engine.impl.persistence.entity.ExternalTaskEntity">
    <id property="id" column="ID_" jdbcType="VARCHAR"/>
    <result property="revision" column="REV_" jdbcType="INTEGER"/>
    <result property="topicName" column="TOPIC_NAME_" jdbcType="VARCHAR"/>
    <result property="workerId" column="WORKER_ID_" jdbcType="VARCHAR" />
    <result property="retries" column="RETRIES_" jdbcType="INTEGER" />
    <result property="errorMessage" column="ERROR_MSG_" jdbcType="VARCHAR"/>
    <result property="lockExpirationTime" column="LOCK_EXP_TIME_" jdbcType="TIMESTAMP"/>
    <result property="suspensionState" column="SUSPENSION_STATE_" jdbcType="INTEGER" />
    <result property="executionId" column="EXECUTION_ID_" jdbcType="VARCHAR" />
    <result property="processInstanceId" column="PROC_INST_ID_" jdbcType="VARCHAR" />
    <result property="processDefinitionId" column="PROC_DEF_ID_" jdbcType="VARCHAR" />
    <result property="processDefinitionKey" column="PROC_DEF_KEY_" jdbcType="VARCHAR" />
    <result property="activityId" column="ACT_ID_" jdbcType="VARCHAR" />
    <result property="activityInstanceId" column="ACT_INST_ID_" jdbcType="VARCHAR" />
  </resultMap>

  <insert id="insertExternalTask" parameterType="org.camunda.bpm.engine.impl.persistence.entity.ExternalTaskEntity">
    insert into ${prefix}ACT_RU_EXT_TASK (
      ID_,
      WORKER_ID_,
      TOPIC_NAME_,
      LOCK_EXP_TIME_,
      RETRIES_,
      ERROR_MSG_,
      SUSPENSION_STATE_,
      EXECUTION_ID_,
      PROC_INST_ID_,
      PROC_DEF_ID_,
      PROC_DEF_KEY_,
      ACT_ID_,
      ACT_INST_ID_,
      REV_
    ) values (
      #{id, jdbcType=VARCHAR},
      #{workerId, jdbcType=VARCHAR},
      #{topicName, jdbcType=VARCHAR},
      #{lockExpirationTime, jdbcType=TIMESTAMP},
      #{retries, jdbcType=INTEGER},
      #{errorMessage, jdbcType=VARCHAR},
      #{suspensionState, jdbcType=INTEGER},
      #{executionId, jdbcType=VARCHAR},
      #{processInstanceId, jdbcType=VARCHAR},
      #{processDefinitionId, jdbcType=VARCHAR},
      #{processDefinitionKey, jdbcType=VARCHAR},
      #{activityId, jdbcType=VARCHAR},
      #{activityInstanceId, jdbcType=VARCHAR},
      1
    )
  </insert>
  
  <update id="updateExternalTask" parameterType="org.camunda.bpm.engine.impl.persistence.entity.ExternalTaskEntity">
    update ${prefix}ACT_RU_EXT_TASK
    <set>
      REV_ = #{revisionNext, jdbcType=INTEGER},
      WORKER_ID_ = #{workerId, jdbcType=VARCHAR},
      TOPIC_NAME_ = #{topicName, jdbcType=VARCHAR},
      LOCK_EXP_TIME_ = #{lockExpirationTime, jdbcType=TIMESTAMP},
      RETRIES_ = #{retries, jdbcType=INTEGER},
      ERROR_MSG_ = #{errorMessage, jdbcType=VARCHAR},
      EXECUTION_ID_ = #{executionId, jdbcType=VARCHAR},
      PROC_INST_ID_ = #{processInstanceId, jdbcType=VARCHAR},
      PROC_DEF_ID_ = #{processDefinitionId, jdbcType=VARCHAR},
      PROC_DEF_KEY_ = #{processDefinitionKey, jdbcType=VARCHAR},
      ACT_ID_ = #{activityId, jdbcType=VARCHAR},
      ACT_INST_ID_ = #{activityInstanceId, jdbcType=VARCHAR},
      SUSPENSION_STATE_ = #{suspensionState, jdbcType=INTEGER}
    </set>
    where ID_= #{id, jdbcType=VARCHAR}
      and REV_ = #{revision, jdbcType=INTEGER}
  </update>
  
  <update id="updateExternalTaskSuspensionStateByParameters" parameterType="map">
    update ACT_RU_EXT_TASK
    <set>
      SUSPENSION_STATE_ = #{suspensionState, jdbcType=INTEGER}
    </set>
    <where>
      <if test="processInstanceId != null">
        PROC_INST_ID_ = #{processInstanceId}
      </if>
      <if test="processDefinitionId != null">
        and PROC_DEF_ID_ = #{processDefinitionId}
      </if>
      <if test="processDefinitionKey != null">
        and PROC_DEF_KEY_ = #{processDefinitionKey}
      </if>
    </where>
  </update>
  
  <delete id="deleteExternalTask" parameterType="org.camunda.bpm.engine.impl.persistence.entity.ExternalTaskEntity">
    delete from ${prefix}ACT_RU_EXT_TASK where ID_ = #{id} and REV_ = #{revision}
  </delete>
  
  <select id="selectExternalTask" parameterType="string" resultMap="externalTaskResultMap">
   select * from ${prefix}ACT_RU_EXT_TASK where ID_ = #{id, jdbcType=VARCHAR}
  </select>
  
  <select id="selectExternalTasksByExecutionId" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="externalTaskResultMap">
    select * from ${prefix}ACT_RU_EXT_TASK where EXECUTION_ID_ = #{parameter, jdbcType=VARCHAR}
  </select>
  
  <select id="selectExternalTasksForTopics" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="externalTaskResultMap">
    ${limitBefore}
    select RES.* ${limitBetween}
    from ${prefix}ACT_RU_EXT_TASK RES
    <where>
      (RES.LOCK_EXP_TIME_ is null or RES.LOCK_EXP_TIME_ &lt;= #{parameter.now, jdbcType=TIMESTAMP})
      and (RES.SUSPENSION_STATE_ is null or RES.SUSPENSION_STATE_ = 1)
      and (RES.RETRIES_ is null or RES.RETRIES_ > 0)
      <if test="parameter != null">
        and RES.TOPIC_NAME_ in 
        <foreach collection="parameter.topics" open="(" close=")" separator="," item="topicName">
          #{topicName}
        </foreach>
      </if>
    </where>
    <include refid="org.camunda.bpm.engine.impl.persistence.entity.AuthorizationEntity.queryAuthorizationCheck" />
    ${limitAfter}
  </select>
  
  <select id="selectExternalTaskByQueryCriteria" parameterType="org.camunda.bpm.engine.impl.ExternalTaskQueryImpl" resultMap="externalTaskResultMap">
    <include refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.bindOrderBy"/>
    ${limitBefore}
    select distinct
    <include refid="columnSelection"/>
    ${limitBetween}
    <include refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.orderBySelection"/> 
    <include refid="selectExternalTaskByQueryCriteriaSql"/>
    ${orderBy}
    ${limitAfter}
  </select>

  <select id="selectExternalTaskCountByQueryCriteria" parameterType="org.camunda.bpm.engine.impl.ExternalTaskQueryImpl" resultType="long">
    select count(distinct RES.ID_)
    <include refid="selectExternalTaskByQueryCriteriaSql"/>
  </select>
  
  <sql id="selectExternalTaskByQueryCriteriaSql">
    from ${prefix}ACT_RU_EXT_TASK RES
    <where>
      <if test="externalTaskId != null">
        and RES.ID_ = #{externalTaskId}
      </if>
      <if test="workerId != null">
        and RES.WORKER_ID_ = #{workerId}
      </if>
      <if test="lockExpirationBefore != null">
        and RES.LOCK_EXP_TIME_ &lt; #{lockExpirationBefore}
      </if>
      <if test="lockExpirationAfter != null">
        and RES.LOCK_EXP_TIME_ &gt; #{lockExpirationAfter}
      </if>
      <if test="topicName != null">
        and RES.TOPIC_NAME_ = #{topicName}
      </if>
      <if test="locked != null &amp;&amp; locked">
        and RES.LOCK_EXP_TIME_ is not null
        and RES.LOCK_EXP_TIME_ &gt; #{now, jdbcType=TIMESTAMP}
      </if>
      <if test="notLocked != null &amp;&amp; notLocked">
        and (RES.LOCK_EXP_TIME_ is null
        or RES.LOCK_EXP_TIME_ &lt; #{now, jdbcType=TIMESTAMP})
      </if>
      <if test="executionId != null">
        and RES.EXECUTION_ID_ = #{executionId}
      </if>
      <if test="processInstanceId != null">
        and RES.PROC_INST_ID_ = #{processInstanceId}
      </if>
      <if test="processDefinitionId != null">
        and RES.PROC_DEF_ID_ = #{processDefinitionId}
      </if>
      <if test="activityId != null">
        and RES.ACT_ID_ = #{activityId}
      </if>
      <if test="retriesLeft != null &amp;&amp; retriesLeft">
        and (RES.RETRIES_ is null
        or RES.RETRIES_ &gt; 0)
      </if>
      <if test="retriesLeft != null &amp;&amp; !retriesLeft">
        and RES.RETRIES_ is not null
        and RES.RETRIES_ = 0
      </if>
      <if test="suspensionState != null">
        <if test="suspensionState.stateCode == 1">
            and RES.SUSPENSION_STATE_ = 1
        </if>
        <if test="suspensionState.stateCode == 2">
            and RES.SUSPENSION_STATE_ = 2
        </if>
      </if>
      <include refid="org.camunda.bpm.engine.impl.persistence.entity.AuthorizationEntity.queryAuthorizationCheck" />
    </where>
  </sql>
  
  <sql id="columnSelection">
    RES.REV_, 
    RES.ID_, 
    RES.TOPIC_NAME_, 
    RES.WORKER_ID_, 
    RES.LOCK_EXP_TIME_,
    RES.RETRIES_,
    RES.ERROR_MSG_,
    RES.EXECUTION_ID_,
    RES.PROC_INST_ID_,
    RES.PROC_DEF_ID_,
    RES.PROC_DEF_KEY_,
    RES.ACT_ID_,
    RES.ACT_INST_ID_,
    RES.SUSPENSION_STATE_
  </sql>
</mapper>