<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.camunda.bpm.engine.impl.persistence.entity.JobEntity">

  <!-- JOB DELETE STATEMENTS-->

  <delete id="deleteJob" parameterType="org.camunda.bpm.engine.impl.persistence.entity.JobEntity">
    delete from ${prefix}ACT_RU_JOB where ID_ = #{id} and REV_ = #{revision}
  </delete>

  <delete id="deleteTimer" parameterType="org.camunda.bpm.engine.impl.persistence.entity.JobEntity">
    delete from ${prefix}ACT_RU_JOB where ID_ = #{id} and REV_ = #{revision}
  </delete>

  <delete id="deleteMessage" parameterType="org.camunda.bpm.engine.impl.persistence.entity.JobEntity">
    delete from ${prefix}ACT_RU_JOB where ID_ = #{id} and REV_ = #{revision}
  </delete>

  <!-- JOB UPDATE STATEMENTS-->

  <update id="updateJobSuspensionStateByParameters" parameterType="java.util.Map">
    update ${prefix}ACT_RU_JOB set
      REV_ = REV_ + 1,
      SUSPENSION_STATE_ = #{suspensionState, jdbcType=INTEGER}
    <where>
      <if test="jobId != null">
        ID_ = #{jobId, jdbcType=VARCHAR}
      </if>
      <if test="jobDefinitionId != null">
        and JOB_DEF_ID_ = #{jobDefinitionId, jdbcType=VARCHAR}
      </if>    
      <if test="processInstanceId != null">
        and PROCESS_INSTANCE_ID_ = #{processInstanceId, jdbcType=VARCHAR}
      </if>
      <if test="processDefinitionId != null">
        and PROCESS_DEF_ID_ = #{processDefinitionId, jdbcType=VARCHAR}
      </if>
      <if test="processDefinitionKey != null">
        and PROCESS_DEF_KEY_ = #{processDefinitionKey, jdbcType=VARCHAR}
      </if>
      <if test="handlerType != null">
        and HANDLER_TYPE_ =  #{handlerType, jdbcType=VARCHAR}
      </if>
    </where>
  </update>

  <update id="updateFailedJobRetriesByParameters" parameterType="java.util.Map">
    update ${prefix}ACT_RU_JOB set
      REV_ = REV_ + 1,
      LOCK_OWNER_ = NULL,
      LOCK_EXP_TIME_ = NULL,
      RETRIES_ = #{retries, jdbcType=INTEGER}
    <where>
      RETRIES_ = 0
      <if test="jobDefinitionId != null">
        and JOB_DEF_ID_ = #{jobDefinitionId, jdbcType=VARCHAR}
      </if>
    </where>
  </update>
  
  <update id="updateJobPriorityByDefinitionId" parameterType="java.util.Map">
    <!-- this does not increment revision; it is ok if this update is overwritten by parallel operations -->
    update ${prefix}ACT_RU_JOB set
      PRIORITY_ = #{priority, jdbcType=INTEGER}
    where
      JOB_DEF_ID_ = #{jobDefinitionId, jdbcType=VARCHAR}
  </update>

  <!-- JOB RESULTMAP (FOR TIMER AND MESSAGE) -->

  <resultMap id="jobResultMap" type="org.camunda.bpm.engine.impl.persistence.entity.JobEntity">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="revision" column="REV_" jdbcType="INTEGER" />
    <result property="lockOwner" column="LOCK_OWNER_" jdbcType="VARCHAR" />
    <result property="lockExpirationTime" column="LOCK_EXP_TIME_" jdbcType="TIMESTAMP" />
    <result property="exclusive" column="EXCLUSIVE_" jdbcType="BOOLEAN" />
    <result property="executionId" column="EXECUTION_ID_" jdbcType="VARCHAR" />
    <result property="processInstanceId" column="PROCESS_INSTANCE_ID_" jdbcType="VARCHAR" />
    <result property="processDefinitionId" column="PROCESS_DEF_ID_" jdbcType="VARCHAR" />
    <result property="processDefinitionKey" column="PROCESS_DEF_KEY_" jdbcType="VARCHAR" />
    <result property="retriesFromPersistence" column="RETRIES_" jdbcType="INTEGER" />
    <result property="exceptionByteArrayId" column="EXCEPTION_STACK_ID_" jdbcType="VARCHAR" />
    <result property="exceptionMessage" column="EXCEPTION_MSG_" jdbcType="VARCHAR" />
    <result property="duedate" column="DUEDATE_" jdbcType="TIMESTAMP" />
    <result property="jobHandlerType" column="HANDLER_TYPE_" jdbcType="VARCHAR" />
    <result property="jobHandlerConfiguration" column="HANDLER_CFG_" jdbcType="VARCHAR" />
    <result property="deploymentId" column="DEPLOYMENT_ID_" jdbcType="VARCHAR" />
    <result property="suspensionState" column="SUSPENSION_STATE_" jdbcType="INTEGER"/>
    <result property="jobDefinitionId" column="JOB_DEF_ID_" jdbcType="VARCHAR" />
    <result property="priority" column="PRIORITY_" jdbcType="BIGINT" />
    <result property="sequenceCounter" column="SEQUENCE_COUNTER_" jdbcType="BIGINT" />
    <discriminator javaType="string" column="TYPE_">
      <case value="message" resultMap="messageResultMap"/>
      <case value="timer" resultMap="timerResultMap"/>
    </discriminator>
  </resultMap>

  <resultMap id="messageResultMap" type="org.camunda.bpm.engine.impl.persistence.entity.MessageEntity" extends="jobResultMap"/>

  <resultMap id="timerResultMap" type="org.camunda.bpm.engine.impl.persistence.entity.TimerEntity" extends="jobResultMap">
    <result property="repeat" column="REPEAT_" jdbcType="VARCHAR" />
  </resultMap>

  <!-- JOB SELECT (FOR TIMER AND MESSAGE) -->

  <select id="selectJob" parameterType="string" resultMap="jobResultMap">
    select * from ${prefix}ACT_RU_JOB where ID_ = #{id}
  </select>

  <select id="selectNextJobsToExecute" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="jobResultMap">
    <bind name="orderingProperties" value="parameter.orderingProperties" />
    <include refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.bindOrderBy"/>
    ${limitBefore}
    select
      RES.* ${limitBetween}
    from ${prefix}ACT_RU_JOB RES

    where (RES.RETRIES_ &gt; 0)
      and (RES.DUEDATE_ is null or RES.DUEDATE_ &lt;= #{parameter.now, jdbcType=TIMESTAMP})
      and (RES.LOCK_OWNER_ is null or RES.LOCK_EXP_TIME_ &lt; #{parameter.now, jdbcType=TIMESTAMP})
      and RES.SUSPENSION_STATE_ = 1

      <if test="parameter.deploymentAware">
        and (RES.DEPLOYMENT_ID_ is null
        <if test="parameter.deploymentIds != null">
          or
          RES.DEPLOYMENT_ID_ in
	        <foreach item="deploymentId" index="index" collection="parameter.deploymentIds"
	        open="(" separator="," close=")">
	          #{deploymentId}
	        </foreach>
        </if>
        )
      </if>
    <if test="parameter.applyOrdering">
      ${orderBy}
    </if>
    ${limitAfter}
  </select>

  <select id="selectExclusiveJobsToExecute" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="jobResultMap">
  	${limitBefore}
    select RES.* ${limitBetween}
    from ${prefix}ACT_RU_JOB RES
    where (RETRIES_ &gt; 0)
      and (DUEDATE_ is null or DUEDATE_ &lt;= #{parameter.now, jdbcType=TIMESTAMP})
      and (LOCK_OWNER_ is null or LOCK_EXP_TIME_ &lt; #{parameter.now, jdbcType=TIMESTAMP})
      and (EXCLUSIVE_ = ${trueConstant})
      and (PROCESS_INSTANCE_ID_ = #{parameter.pid})
      and RES.SUSPENSION_STATE_ = 1
    ${limitAfter}
  </select>

  <select id="selectJobsByConfiguration" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="jobResultMap">
      select * from ${prefix}ACT_RU_JOB
      where HANDLER_TYPE_ = #{parameter.handlerType}
      and (HANDLER_CFG_ = #{parameter.handlerConfiguration}
      <if test="parameter.handlerConfigurationWithFollowUpJobCreatedProperty != null">
      or HANDLER_CFG_ = #{parameter.handlerConfigurationWithFollowUpJobCreatedProperty}
      </if>)
  </select>

  <select id="selectJobsByExecutionId" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="jobResultMap">
    select *
    from ${prefix}ACT_RU_JOB J
    where J.EXECUTION_ID_ = #{parameter}
  </select>

  <select id="selectJobsByProcessInstanceId" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="jobResultMap">
    select *
    from ${prefix}ACT_RU_JOB J
    where J.PROCESS_INSTANCE_ID_ = #{parameter}
  </select>

  <select id="selectJobByQueryCriteria" parameterType="org.camunda.bpm.engine.impl.JobQueryImpl" resultMap="jobResultMap">
  	<include refid="org.camunda.bpm.engine.impl.persistence.entity.Commons.bindOrderBy"/>
    ${limitBefore}
    select RES.*
    ${limitBetween}
    <include refid="selectJobByQueryCriteriaSql"/>
    ${orderBy}
    ${limitAfter}
  </select>

  <select id="selectJobCountByQueryCriteria" parameterType="org.camunda.bpm.engine.impl.JobQueryImpl" resultType="long">
    select count(distinct RES.ID_)
    <include refid="selectJobByQueryCriteriaSql"/>
  </select>

  <sql id="selectJobByQueryCriteriaSql">
    from ${prefix}ACT_RU_JOB RES
    <if test="executable">
        LEFT OUTER JOIN ${prefix}ACT_RU_EXECUTION PI ON PI.ID_ = RES.PROCESS_INSTANCE_ID_
    </if>
    <if test="activityId != null">
      LEFT OUTER JOIN ${prefix}ACT_RU_JOBDEF JD ON JD.ID_ = RES.JOB_DEF_ID_ 
    </if>
    <where>
      <if test="id != null">
        RES.ID_ = #{id}
      </if>
      <if test="jobDefinitionId != null">
        RES.JOB_DEF_ID_ = #{jobDefinitionId}
      </if>
      <if test="activityId != null">
      	JD.ACT_ID_ = #{activityId}
      </if>
      <if test="processInstanceId != null">
        and RES.PROCESS_INSTANCE_ID_ = #{processInstanceId}
      </if>
      <if test="executionId != null">
        and RES.EXECUTION_ID_ = #{executionId}
      </if>
      <if test="processDefinitionId != null">
        and RES.PROCESS_DEF_ID_ = #{processDefinitionId}
      </if>
      <if test="processDefinitionKey != null">
        and RES.PROCESS_DEF_KEY_ = #{processDefinitionKey}
      </if>
      <if test="retriesLeft">
        and RES.RETRIES_ &gt; 0
      </if>
      <if test="executable">
        and (RES.RETRIES_ &gt; 0)
        and (RES.DUEDATE_ is null or RES.DUEDATE_ &lt;= #{now, jdbcType=TIMESTAMP})
        and (
            (RES.EXECUTION_ID_ is null)
            or
            (PI.SUSPENSION_STATE_ = 1 or PI.SUSPENSION_STATE_ is null)
      )
      </if>
      <if test="onlyTimers">
        and RES.TYPE_ = 'timer'
      </if>
      <if test="onlyMessages">
        and RES.TYPE_ = 'message'
      </if>
      <if test="duedateHigherThan != null">
        and RES.DUEDATE_ &gt; #{duedateHigherThan}
      </if>
      <if test="duedateLowerThan != null">
        and RES.DUEDATE_ &lt; #{duedateLowerThan}
      </if>
      <if test="duedateHigherThanOrEqual != null">
        and RES.DUEDATE_ &gt;= #{duedateHigherThanOrEqual}
      </if>
      <if test="duedateLowerThanOrEqual != null">
        and RES.DUEDATE_ &lt;= #{duedateLowerThanOrEqual}
      </if>
      <if test="priorityHigherThanOrEqual != null">
        and RES.PRIORITY_ &gt;= #{priorityHigherThanOrEqual}
      </if>
      <if test="priorityLowerThanOrEqual != null">
        and RES.PRIORITY_ &lt;= #{priorityLowerThanOrEqual}
      </if>
      <if test="withException">
      	and (RES.EXCEPTION_MSG_ is not null or RES.EXCEPTION_STACK_ID_ is not null)
      </if>
      <if test="exceptionMessage">
      	and RES.EXCEPTION_MSG_ = #{exceptionMessage}
      </if>
      <if test="noRetriesLeft">
        and RES.RETRIES_ = 0
      </if>
      <if test="suspensionState != null">
        and RES.SUSPENSION_STATE_ = #{suspensionState.stateCode}
      </if>

      <if test="isAuthorizationCheckEnabled &amp;&amp; authUserId != null">
        AND
          ( CASE

            WHEN
              RES.PROCESS_DEF_KEY_ is not null
            THEN
              (<include refid="org.camunda.bpm.engine.impl.persistence.entity.AuthorizationEntity.authorizationCheck" />)

            ELSE
              <!-- "standalone" job (e.g. job to activate/suspend a process definition etc.) -->
              1
          END ) = 1
      </if>

    </where>
  </sql>

  <!-- TIMER INSERT -->

  <insert id="insertTimer" parameterType="org.camunda.bpm.engine.impl.persistence.entity.TimerEntity">
    insert into ${prefix}ACT_RU_JOB (
            ID_,
            TYPE_,
            LOCK_OWNER_,
            LOCK_EXP_TIME_,
            EXCLUSIVE_,
            EXECUTION_ID_,
            PROCESS_INSTANCE_ID_,
            PROCESS_DEF_ID_,
            PROCESS_DEF_KEY_,
            RETRIES_,
            EXCEPTION_STACK_ID_,
            EXCEPTION_MSG_,
            DUEDATE_,
            REPEAT_,
            HANDLER_TYPE_,
            HANDLER_CFG_,
            DEPLOYMENT_ID_,
            SUSPENSION_STATE_,
            JOB_DEF_ID_,
            PRIORITY_,
            SEQUENCE_COUNTER_,
            REV_
          )
    values (#{id, jdbcType=VARCHAR},
            'timer',
            #{lockOwner, jdbcType=VARCHAR},
            #{lockExpirationTime, jdbcType=TIMESTAMP},
            #{exclusive, jdbcType=BOOLEAN},
            #{executionId, jdbcType=VARCHAR},
            #{processInstanceId, jdbcType=VARCHAR},
            #{processDefinitionId, jdbcType=VARCHAR},
            #{processDefinitionKey, jdbcType=VARCHAR},
            #{retries, jdbcType=INTEGER},
            #{exceptionByteArrayId, jdbcType=VARCHAR},
            #{exceptionMessage, jdbcType=VARCHAR},
            #{duedate, jdbcType=TIMESTAMP},
            #{repeat, jdbcType=VARCHAR},
            #{jobHandlerType, jdbcType=VARCHAR},
            #{jobHandlerConfiguration, jdbcType=VARCHAR},
            #{deploymentId, jdbcType=VARCHAR},
            #{suspensionState, jdbcType=INTEGER},
            #{jobDefinitionId, jdbcType=VARCHAR},
            #{priority, jdbcType=BIGINT},
            #{sequenceCounter, jdbcType=BIGINT},
            1
    )
  </insert>

  <!-- TIMER UPDATE -->

  <update id="updateTimer" parameterType="org.camunda.bpm.engine.impl.persistence.entity.TimerEntity">
    update ${prefix}ACT_RU_JOB
    <set>
       REV_ =  #{revisionNext, jdbcType=INTEGER},
       EXECUTION_ID_ = #{executionId, jdbcType=VARCHAR},
       LOCK_EXP_TIME_ = #{lockExpirationTime, jdbcType=TIMESTAMP},
       LOCK_OWNER_ = #{lockOwner, jdbcType=VARCHAR},
       RETRIES_ = #{retries, jdbcType=INTEGER},
       EXCEPTION_STACK_ID_ = #{exceptionByteArrayId, jdbcType=VARCHAR},
       EXCEPTION_MSG_ = #{exceptionMessage, jdbcType=VARCHAR},
       DUEDATE_ = #{duedate, jdbcType=TIMESTAMP},
       SUSPENSION_STATE_ = #{suspensionState, jdbcType=INTEGER},
       PROCESS_DEF_ID_ = #{processDefinitionId, jdbcType=VARCHAR},
       JOB_DEF_ID_ = #{jobDefinitionId, jdbcType=VARCHAR},
       DEPLOYMENT_ID_ = #{deploymentId, jdbcType=VARCHAR},
       HANDLER_CFG_ = #{jobHandlerConfiguration, jdbcType=VARCHAR},
       PRIORITY_ = #{priority, jdbcType=BIGINT},
       SEQUENCE_COUNTER_ = #{sequenceCounter, jdbcType=BIGINT}
    </set>
    where ID_= #{id, jdbcType=VARCHAR}
      and REV_ = #{revision, jdbcType=INTEGER}
  </update>

  <!-- TIMER SELECT -->

  <select id="selectUnlockedTimersByDuedate" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="jobResultMap">
    select *
    from ${prefix}ACT_RU_JOB
    where (TYPE_ = 'timer')
      and (DUEDATE_ is not null)
      and (DUEDATE_ &lt; #{parameter, jdbcType=TIMESTAMP})
      and (LOCK_OWNER_ is null or LOCK_EXP_TIME_ &lt; #{parameter, jdbcType=TIMESTAMP})
      and (RETRIES_  &gt; 0)
    order by DUEDATE_
  </select>

  <select id="selectTimersByExecutionId" parameterType="org.camunda.bpm.engine.impl.db.ListQueryParameterObject" resultMap="jobResultMap">
    select *
    from ${prefix}ACT_RU_JOB
    where (RETRIES_ &gt; 0)
      and (TYPE_ = 'timer')
      and (EXECUTION_ID_ = #{parameter})
  </select>

  <!-- MESSAGE INSERT -->

  <insert id="insertMessage" parameterType="org.camunda.bpm.engine.impl.persistence.entity.MessageEntity">
    insert into ${prefix}ACT_RU_JOB (
            ID_,
            TYPE_,
            LOCK_OWNER_,
            LOCK_EXP_TIME_,
            EXCLUSIVE_,
            EXECUTION_ID_,
            PROCESS_INSTANCE_ID_,
            PROCESS_DEF_ID_,
            PROCESS_DEF_KEY_,
            RETRIES_, 
            EXCEPTION_STACK_ID_,
            EXCEPTION_MSG_,
            DUEDATE_,
            HANDLER_TYPE_,
            HANDLER_CFG_,
            DEPLOYMENT_ID_,
            SUSPENSION_STATE_,
            JOB_DEF_ID_,
            PRIORITY_,
            SEQUENCE_COUNTER_,
            REV_
            )
    values (#{id, jdbcType=VARCHAR},
            'message',
            #{lockOwner, jdbcType=VARCHAR},
            #{lockExpirationTime, jdbcType=TIMESTAMP},
            #{exclusive, jdbcType=BOOLEAN},
            #{executionId, jdbcType=VARCHAR},
            #{processInstanceId, jdbcType=VARCHAR},
            #{processDefinitionId, jdbcType=VARCHAR},
            #{processDefinitionKey, jdbcType=VARCHAR},
            #{retries, jdbcType=INTEGER},
            #{exceptionByteArrayId, jdbcType=VARCHAR},
            #{exceptionMessage, jdbcType=VARCHAR},
            #{duedate, jdbcType=TIMESTAMP},
            #{jobHandlerType, jdbcType=VARCHAR},
            #{jobHandlerConfiguration, jdbcType=VARCHAR},
            #{deploymentId, jdbcType=VARCHAR},
            #{suspensionState, jdbcType=INTEGER},
            #{jobDefinitionId, jdbcType=VARCHAR},
            #{priority, jdbcType=BIGINT},
            #{sequenceCounter, jdbcType=BIGINT},
            1
    )
  </insert>

  <!-- MESSAGE UPDATE -->

  <update id="updateMessage" parameterType="org.camunda.bpm.engine.impl.persistence.entity.MessageEntity">
    update ${prefix}ACT_RU_JOB
    <set>
       REV_ =  #{revisionNext, jdbcType=INTEGER},
       EXECUTION_ID_ = #{executionId, jdbcType=VARCHAR},
       LOCK_EXP_TIME_ = #{lockExpirationTime, jdbcType=TIMESTAMP},
       LOCK_OWNER_ = #{lockOwner, jdbcType=VARCHAR},
       RETRIES_ = #{retries, jdbcType=INTEGER},
       EXCEPTION_STACK_ID_ = #{exceptionByteArrayId, jdbcType=VARCHAR},
       EXCEPTION_MSG_ = #{exceptionMessage, jdbcType=VARCHAR},
       SUSPENSION_STATE_ = #{suspensionState, jdbcType=INTEGER},
       PROCESS_DEF_ID_ = #{processDefinitionId, jdbcType=VARCHAR},
       JOB_DEF_ID_ = #{jobDefinitionId, jdbcType=VARCHAR},
       DEPLOYMENT_ID_ = #{deploymentId, jdbcType=VARCHAR},
       HANDLER_CFG_ = #{jobHandlerConfiguration, jdbcType=VARCHAR},
       PRIORITY_ = #{priority, jdbcType=BIGINT},
       SEQUENCE_COUNTER_ = #{sequenceCounter, jdbcType=BIGINT}
    </set>
    where ID_= #{id, jdbcType=VARCHAR}
      and REV_ = #{revision, jdbcType=INTEGER}
  </update>

</mapper>
