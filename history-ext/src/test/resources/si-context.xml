<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
  xmlns:p="http://www.springframework.org/schema/p" xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
  xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.2.xsd
		http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

  <int:gateway id="inGateway" service-interface="org.camunda.bpm.engine.history.si.HistoryEventMessageGateway" default-request-channel="historyEventMessageChannel"/>

  <!-- HistoryEventMessage goes in here, either direct or over the gateway above -->
  <int:channel id="historyEventMessageChannel"/>

  <!-- START-TRANSFORMATION -->

  <int:channel id="transformedHistoryEventMessageChannel"/>

  <!-- DECIDE MARSHALLING HERE -->

  <bean id="historyEventMessageTransformer" class="org.camunda.bpm.engine.history.si.Jackson2HistoryEventMessageTransformer"/>

<!--
  <bean id="historyEventMessageTransformer" class="org.camunda.bpm.engine.history.si.Jaxb2HistoryEventMessageTransformer"/>
-->

  <!-- transforms the historyEventMessages to XML or JSON, whatever 'ref' points to -->
  <int:service-activator input-channel="historyEventMessageChannel" 
                         output-channel="transformedHistoryEventMessageChannel"
                         ref="historyEventMessageTransformer"
                         method="transformFromHistoryEventMessage"/>

  <!-- END-TRANSFORMATION -->

  <!-- ENRICH HEADER WITH NEEDED INFORMATION -->
  <int:header-enricher input-channel="transformedHistoryEventMessageChannel" output-channel="outChannel">
    <int:header name="hostname" value="localhost"/>
    <int:header name="developerOfTheDay" value="Klaus.Mueller"/>
    <int:header name="messageOfTheDay" value="Use meaningfull headers in messages"/>
  </int:header-enricher>

  <!-- 
        THIS CHANNEL SHOULD POINT TO AN OUTBOUND_CHANNEL_ADAPTER OR OUTBOUND-GATEWAY,
        SEE PRODUCER FOR CONFIGURATION.
  -->
  <int:channel id="outChannel"/>

  <!-- PRODUCERS ARE DEFINED IN si-jms-context.xml and si-jms-over-amqp-context.xml-->

  <!-- CONSUMER -->
  <int-jms:message-driven-channel-adapter id="jmsIn" channel="inChannel" destination="historyEventQueue" />

  <int:channel id="inChannel" />

  <!-- transforms the historyEventMessages to XML or JSON, whatever 'ref' points to -->
  <int:service-activator input-channel="inChannel" 
                         output-channel="transformedInChannel"
                         ref="historyEventMessageTransformer"
                         method="transformToHistoryEventMessage"/>

  <int:channel id="transformedInChannel"/>

  <int:service-activator input-channel="transformedInChannel" ref="historyEventLoger"/>

  <bean id="historyEventLoger" class="org.camunda.bpm.engine.history.si.HistoryEventMessageMessageHandler">
    <constructor-arg>
      <bean class="org.camunda.bpm.engine.history.si.LoggingHistoryEventHandler"/>
    </constructor-arg>
  </bean>
  <!-- CONSUMER END -->

</beans>
