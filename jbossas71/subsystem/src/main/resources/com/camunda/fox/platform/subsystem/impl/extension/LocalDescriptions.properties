fox-platform=The messaging subsystem.
fox-platform.add=Operation adding the fox-platform subsystem
fox-platform.remove=Operation removing the fox-platform subsystem
fox-platform.process-engines=Process engines provided by the fox-platform subsystem

process-engines=Collection of defined process engines.
process-engines.add=Operation adding a process engine.
process-engines.remove=Operation removing a process engine.
process-engines.name=Not used.


hornetq-server.clustered=Whether the server is clustered.
hornetq-server.persistence-enabled=Whether the server will use the file based journal for persistence.
hornetq-server.scheduled-thread-pool-max-size=The number of threads that the main scheduled thread pool has.
hornetq-server.thread-pool-max-size=The number of threads that the main thread pool has. -1 means no limit.
hornetq-server.security-domain=The security domain to use to verify user and role information
hornetq-server.security-enabled=Whether security is enabled.
hornetq-server.security-invalidation-interval=How long (in ms) to wait before invalidating the security cache.
hornetq-server.wild-card-routing-enabled=Whether the server supports wild card routing.
hornetq-server.management-address=Address to send management messages to.
hornetq-server.management-notification-address=The name of the address that consumers bind to  to receive management notifications.
hornetq-server.cluster-user=The user used by cluster connections to communicate between the clustered nodes.
hornetq-server.cluster-password=The password used by cluster connections to communicate between the clustered nodes.
hornetq-server.jmx-management-enabled=Whether HornetQ should expose its internal management API via JMX. This is not recommended, as accessing these MBeans can lead to inconsistent configuration.
hornetq-server.jmx-domain=The JMX domain used to register internal HornetQ MBeans in the MBeanServer.
hornetq-server.message-counter-enabled=Whether message counters are enabled.
hornetq-server.message-counter-sample-period=The sample period (in ms) to use for message counters.
hornetq-server.message-counter-max-day-history=How many days to keep message counter history.
hornetq-server.connection-ttl-override=If set, this will override how long (in ms) to keep a connection alive without receiving a ping.
hornetq-server.async-connection-execution-enabled=Whether incoming packets on the server should be handed off to a thread from the thread pool for processing. False if they should be handled on the remoting thread.
hornetq-server.transaction-timeout=How long (in ms) before a transaction can be removed from the resource manager after create time.
hornetq-server.transaction-timeout-scan-period=How often (in ms) to scan for timeout transactions.
hornetq-server.message-expiry-scan-period=How often (in ms) to scan for expired messages.
hornetq-server.message-expiry-thread-priority=The priority of the thread expiring messages.
hornetq-server.id-cache-size=The size of the cache for pre-creating message IDs.
hornetq-server.persist-id-cache=Whether IDs are persisted to the journal.
hornetq-server.remoting-interceptors=The list of interceptor classes used by this server.
hornetq-server.backup=Whether this server is a backup server.
hornetq-server.allow-failback=Whether this server will automatically shutdown if the original live server comes back up.
hornetq-server.failback-delay=How long to wait before failback occurs on live server restart.
hornetq-server.failover-on-shutdown=Whether this backup server (if it is a backup server) should come live on a normal server shutdown.
hornetq-server.shared-store=Whether this server is using a shared store for failover.
hornetq-server.persist-delivery-count-before-delivery=Whether the delivery count is persisted before delivery. False means that this only happens after a message has been cancelled.
hornetq-server.live-connector-ref=The name of the connector used to connect to the live connector. If this server is not a backup that uses shared nothing HA, it's value is "undefined".
hornetq-server.create-bindings-dir=Whether the server should create the bindings directory on start up.
hornetq-server.create-journal-dir=Whether the server should create the journal directory on start up.
hornetq-server.journal-type=The type of journal to use.
hornetq-server.journal-buffer-timeout=The timeout (in nanoseconds) used to flush internal buffers on the journal.
hornetq-server.journal-buffer-size=The size of the internal buffer on the journal.
hornetq-server.journal-sync-transactional=Whether to wait for transaction data to be synchronized to the journal before returning a response to the client.
hornetq-server.journal-sync-non-transactional=Whether to wait for non transaction data to be synced to the journal before returning a response to the client.
hornetq-server.log-journal-write-rate=Whether to periodically log the journal's write rate and flush rate.
hornetq-server.journal-file-size=The size (in bytes) of each journal file.
hornetq-server.journal-min-files=How many journal files to pre-create.
hornetq-server.journal-compact-percentage=The percentage of live data on which we consider compacting the journal.
hornetq-server.journal-compact-min-files=The minimal number of journal data files before we can start compacting.
hornetq-server.journal-max-io=The maximum number of write requests that can be in the AIO queue at any one time.
hornetq-server.page-max-concurrent-io=The maximum number of concurrent reads allowed on paging
hornetq-server.perf-blast-pages=TODO
hornetq-server.run-sync-speed-test=Whether on startup to perform a diagnostic test on how fast your disk can sync. Useful when determining performance issues.
hornetq-server.server-dump-interval=How often to dump basic runtime information to the server log. A value less than 1 disables this feature.
hornetq-server.memory-warning-threshold=Percentage of available memory which if exceeded results in a warning log
hornetq-server.memory-measure-interval=Frequency to sample JVM memory in ms (or -1 to disable memory sampling)
hornetq-server.started=Whether this server is started.
hornetq-server.version=The server's version.

match=Expression matched against a queue address.

hornetq-server.get-connectors-as-json=Returns the connectors configured for this server using JSON serialization.
hornetq-server.get-connectors-as-json.reply=A string in JSON format.
hornetq-server.enable-message-counters=Enable message counters.
hornetq-server.disable-message-counters=Disable message counters.
hornetq-server.reset-all-message-counters=Reset all message counters.
hornetq-server.reset-all-message-counter-histories=Reset all message counters history.
hornetq-server.list-prepared-transactions=List all the prepared transaction, sorted by date, oldest first.
hornetq-server.list-prepared-transactions.reply=A list of strings. The Strings are Base-64 representation of the transaction XID and can be used to heuristically commit or rollback the transactions.
hornetq-server.list-prepared-transaction-details-as-json=List all the prepared transaction, sorted by date, oldest first, with details, in JSON format.
hornetq-server.list-prepared-transaction-details-as-json.reply=The returned String is a JSON string containing an array of transaction details.
hornetq-server.list-prepared-transaction-details-as-html=List all the prepared transaction, sorted by date, oldest first, with details, in HTML format.
hornetq-server.list-prepared-transaction-details-as-html.reply=The returned String is an HTML string containing a table of transaction details.
hornetq-server.list-heuristic-committed-transactions=Lists transactions which have been heuristically committed.
hornetq-server.list-heuristic-committed-transactions.reply=A list of strings. The Strings are Base-64 representation of the transaction XID.
hornetq-server.list-heuristic-rolled-back-transactions=Lists transactions which have been heuristically rolled back.
hornetq-server.list-heuristic-rolled-back-transactions.reply=A list of strings. The Strings are Base-64 representation of the transaction XID.
hornetq-server.commit-prepared-transaction=Heuristically commits a prepared transaction.
hornetq-server.commit-prepared-transaction.transaction-as-base-64=The Base64 representation of a transaction XID.
hornetq-server.commit-prepared-transaction.reply=True if the transaction was successfully committed, false otherwise.
hornetq-server.rollback-prepared-transaction=Heuristically rolls back a prepared transaction.
hornetq-server.rollback-prepared-transaction.transaction-as-base-64=The Base64 representation of a transaction XID.
hornetq-server.rollback-prepared-transaction.reply=True if the transaction was successfully rolled back, false otherwise.
hornetq-server.list-remote-addresses=Lists the addresses of all the clients connected to the given address. If an ip-address argument is supplied, only those clients whose remote address string includes the given ip-address string will be returned.
hornetq-server.list-remote-addresses.ip-address=An IP address in string format.
hornetq-server.list-remote-addresses.reply=A list of strings, where the strings are remote client addresses.
hornetq-server.close-connections-for-address=Closes all the connections of clients connected to this server whose remote address contains the specified IP address.
hornetq-server.close-connections-for-address.ip-address=An IP address in string format.
hornetq-server.close-connections-for-address.reply=True if any connections were closed, false otherwise.
hornetq-server.list-connection-ids=Lists the IDs of all the connections connected to this server.
hornetq-server.list-connection-ids.reply=A list of strings, where each string is a connection ID.
hornetq-server.list-producers-info-as-json=For all sessions, lists information about message producers using JSON serialization.
hornetq-server.list-producers-info-as-json.reply=The returned String is a JSON string containing an array of producer details.
hornetq-server.list-sessions=Lists all the sessions IDs for the specified connection ID.
hornetq-server.list-sessions.connection-id=The connection id.
hornetq-server.list-sessions.reply=A list of strings, where each string is a session ID.
hornetq-server.get-roles=Get the security roles for a specific address match.
hornetq-server.get-roles.address-match=An address match.
hornetq-server.get-roles.reply=A list, each element of which is a set of properties describing a security role.
hornetq-server.get-roles-as-json=Get the roles (as a JSON string) for a specific address match.
hornetq-server.get-roles-as-json.address-match=An address match.
hornetq-server.get-roles-as-json.reply=The returned String is a JSON string containing an array of security role details.
hornetq-server.get-address-settings-as-json=Returns the address settings as a JSON string for an address match.
hornetq-server.get-address-settings-as-json.address-match=An address match.
hornetq-server.get-address-settings-as-json.reply=The returned String is a JSON string containing an array of address settings details.
hornetq-server.force-failover=Force the messaging server to stop and notify clients to failover.

jms-server.list-connections-as-json=List all JMS connections.
jms-server.list-connections-as-json.reply=The returned String is a JSON string containing an array of JMSConnectionInfo objects.
jms-server.list-consumers-as-json=Lists all the consumers which belongs to the JMS Connection specified by the connection-id.
jms-server.list-consumers-as-json.connection-id=The connection id.
jms-server.list-consumers-as-json.reply=The returned String is a JSON string containing an array of JMSConsumerInfo objects.
jms-server.list-all-consumers-as-json=Lists all the consumers.
jms-server.list-all-consumers-as-json.reply=The returned String is a JSON string containing an array of JMSConsumerInfo objects.
jms-server.list-target-destinations=Lists all addresses to which the designated session has sent messages.
jms-server.list-target-destinations.session-id=The session id.
jms-server.list-target-destinations.reply=The returned String is a JSON string containing an array of address names.
jms-server.get-last-sent-message-id=Returns the ID of the last message sent from the given session to the given address.
jms-server.get-last-sent-message-id.session-id=The session id.
jms-server.get-last-sent-message-id.reply=The message id.
jms-server.get-session-creation-time=Gets the session's creation time.
jms-server.get-session-creation-time.session-id=The session id.
jms-server.get-session-creation-time.reply=The creation time, represented as a string showing the number of milliseconds since the epoch.
jms-server.list-sessions-as-json=Lists all the sessions IDs for the specified connection ID.
jms-server.list-sessions-as-json.connection-id=The connection id.
jms-server.list-sessions-as-json.reply=The returned String is a JSON string containing an array of session ids.
jms-server.list-prepared-transaction-jms-details-as-json=List all the prepared transactions, sorted by date, oldest first, with details in JMS format, in JSON format
jms-server.list-prepared-transaction-jms-details-as-json.reply=The returned String is a JSON string containing an array of transaction details.
jms-server.list-prepared-transaction-jms-details-as-html=List all the prepared transactions, sorted by date, oldest first, with details in JMS, in HTML format
jms-server.list-prepared-transaction-jms-details-as-html.reply=The returned String is an HTML string containing a table of transaction details.
jms-server.address-name=

path=A filesystem path pointing to one of the locations where HornetQ stores persistent data.
path.add=Add a file system path.
path.remove=Remove a path.
path.path=The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path. <p>If treated as an absolute path, the actual runtime pathname specified by the value of this attribute will be determined as follows: </p>If this value is already absolute, then the value is directly used.  Otherwise the runtime pathname is resolved in a system-dependent way.  On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.
path.relative-to=The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute. The standard paths provided by the system include:<ul><li>jboss.home - the root directory of the JBoss AS distribution</li><li>user.home - user's home directory</li><li>user.dir - user's current working directory</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - root directory for an individual server instance</li><li>jboss.server.data.dir - directory the server will use for persistent data file storage</li><li>jboss.server.log.dir - directory the server will use for log file storage</li><li>jboss.server.tmp.dir - directory the server will use for temporary file storage</li><li>jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances</li></ul>

bindings-directory.path=The directory in which the bindings journal lives. The default is ${jboss.server.data.dir}/messaging/bindings.
journal-directory.path=The directory in which the message journal lives. The default is ${jboss.server.data.dir}/messaging/journal.
large-messages-directory.path=The directory in which large messages are stored. The default is ${jboss.server.data.dir}/messaging/largemessages.
paging-directory.path=The directory where page files are stored. The default is ${jboss.server.data.dir}/messaging/paging.

grouping-handler=Makes decisions about which node in a cluster should handle a message with a group id assigned.
grouping-handler.add=Operation adding the grouping handler. Only one grouping handler is allowed.
grouping-handler.remove=Operation removing the grouping handler.
grouping-handler.type=Whether the handler is the single "Local" handler for the cluster, which makes handling decisions, or a "Remote" handler which converses with the local handler.
grouping-handler.grouping-handler-address=A reference to a cluster connection and the address it uses.
grouping-handler.timeout=How long to wait for a handling decision to be made; an exception will be thrown during the send if this timeout is reached, ensuring that strict ordering is kept.

in-vm-acceptor=Defines a way in which in-VM connections can be made to the HornetQ server.
remote-acceptor=Defines a way in which remote connections can be made to the HornetQ server.
acceptor=An acceptor defines a way in which connections can be made to the HornetQ server.
acceptor.remote=A remote acceptor
acceptor.in-vm=An IN-VM acceptor
acceptor.add=Operation adding an acceptor
acceptor.add.params=A set of key-value pairs understood by the acceptor factory-class and used to configure it.
acceptor.remove=Operation adding an acceptor
acceptor.started=Whether this acceptor is started.
acceptor.start=Starts the acceptor.
acceptor.stop=Stops the acceptor.
acceptor.param=A key-value pair understood by the acceptor factory-class and used to configure it.

address-setting=An address setting defines some attributes that are defined against an address wildcard rather than a specific queue.
address-setting.add=Operation adding an address-setting
address-setting.remove=Operation removing an existing address-setting
address-setting.address-full-policy=Determines what happens when an address where max-size-bytes is specified becomes full. (PAGE, DROP or BLOCK)
address-setting.dead-letter-address=The dead letter address
address-setting.last-value-queue=Defines whether a queue only uses last values or not
address-setting.max-delivery-attempts=Defines how many time a cancelled message can be redelivered before sending to the dead-letter-address
address-setting.max-size-bytes=The max bytes size.
address-setting.message-counter-history-day-limit=Day limit for the message counter history.
address-setting.expiry-address=Defines where to send a message that has expired.
address-setting.redelivery-delay=Defines how long to wait before attempting redelivery of a cancelled message
address-setting.redistribution-delay=Defines how long to wait when the last consumer is closed on a queue before redistributing any messages
address-setting.page-size-bytes=The paging size.
address-setting.page-max-cache-size=The number of page files to keep in memory to optimize IO during paging navigation.
address-setting.send-to-dla-on-no-route=If this parameter is set to true for that address, if the message is not routed to any queues it will instead be sent to the dead letter address (DLA) for that address, if it exists.

connector=A connector can be used by a client to define how it connects to a server.
remote-connector=Used by a remote client to define how it connects to a server.
in-vm-connector=Used by an in-VM client to define how it connects to a server.
connector.add=Operation adding a connector
connector.add.params=A set of key-value pairs understood by the connector factory-class and used to configure it.
connector.remove=Operation removing a connector
connector.param=A key-value pair understood by the connector factory-class and used to configure it.

core-address=A runtime-only resource representing a HornetQ "address". Zero or more queues can be bound to a single address. When a message is routed, it is routed to the set of queues bound to the message's address.
core-address.roles=A list of the security roles (name and permissions) associated with the address.
core-address.role.name=The name of the security role.
core-address.role.send=Whether the role has permission to send to the address.
core-address.role.consume=Whether the role has permission to consume from the address.
core-address.role.createDurableQueue=Whether the role has permission to create a durable queue.
core-address.role.deleteDurableQueue=Whether the role has permission to delete a durable queue.
core-address.role.createNonDurableQueue=Whether the role has permission to create a non-durable queue.
core-address.role.deleteNonDurableQueue=Whether the role has permission to delete a non-durable queue.
core-address.role.manage=Whether the role has permission to manage the address.
core-address.queue-names=The names of the queues associated with the address.
core-address.number-of-bytes-per-page=The number of bytes used by each page for this address.
core-address.number-of-pages=The number of pages used by this address.
core-address.binding-names=The names of all bindings (both queues and diverts) bound to this address.
core-address.get-roles-as-json=Returns the roles (name and permissions) associated to this address using JSON serialization.
core-address.get-roles-as-json.reply=A string JSON format.

queue=A Queue.
queue.add=Operation adding a core queue.
queue.remove=Operation removing an existing queue.
queue.name=The unique queue name.
queue.queue-address=The queue address defines what address is used for routing messages.
queue.filter=A queue message filter definition. An undefined or empty filter will match all messages.
queue.durable=Defines whether the queue is durable.
queue.id=The id of the queue.
queue.paused=Whether the queue is paused.
queue.temporary=Whether the queue is temporary.
queue.message-count=The number of messages currently in this queue.
queue.scheduled-count=The number of scheduled messages in this queue.
queue.consumer-count=The number of consumers consuming messages from this queue.
queue.delivering-count=The number of messages that this queue is currently delivering to its consumers.
queue.messages-added=The number of messages added to this queue since it was created.
queue.list-scheduled-messages=List the messages scheduled for delivery.
queue.list-scheduled-messages.reply=A list where each element is a map of message properties to their value.
queue.list-scheduled-messages-as-json=List the messages scheduled for delivery as a string in JSON format.
queue.list-scheduled-messages-as-json.reply=A string in JSON format representing a list where each element is a map of message properties to their value.
queue.message.messageID=The message id.
queue.message.userID=The userID - this is an optional user specified UUID that can be set to identify the message.
queue.message.address=Te address this message is sent to.
queue.message.type=Tmessage type. 0 = Default; 2 = Object; 3 = Text; 4 = Bytes; 5 = Map; 6 = Stream
queue.message.durable=Whether this message is durable or not.
queue.message.expiration=The expiration time of this message.
queue.message.timestamp=The message timestamp. The timestamp corresponds to the time this message was handled by a HornetQ server.
queue.message.priority=The message priority. Values range from 0 (less priority) to 9 (more priority) inclusive.
queue.list-messages=List all messages in the queue that match the filter
queue.list-messages.reply=A list where each element is a map of message properties to their value.
queue.list-messages-as-json=List all messages in the queue that match the filter and return them as a string in JSON format.
queue.count-messages=Returns the number of the messages in the queue matching the given filter.
queue.remove-message=Remove the message corresponding to the given message-id.
queue.remove-message.reply=True if the message was removed, false otherwise.
queue.message-id=A message id.
queue.remove-messages=Remove messages matching the given filter from the destination.
queue.remove-messages.reply=The number of removed messages.
queue.expire-message=Expire the message corresponding to the given message-id.
queue.expire-message.reply=True if the message was expired, false otherwise.
queue.expire-messages=Expire the messages matching the given filter.
queue.expire-messages.reply=The number of expired messages.
queue.send-message-to-dead-letter-address=Send the message corresponding to the given message-id to this queue's Dead Letter Address.
queue.send-message-to-dead-letter-address.reply=True if the message was sent to the dead letter address, false otherwise.
queue.send-messages-to-dead-letter-address=Send the messages corresponding to the given filter to this queue's Dead Letter Address.
queue.send-messages-to-dead-letter-address.reply=The number of sent messages.
queue.change-message-priority=Change the priority of the message corresponding to the given message-id.
queue.change-message-priority.new-priority=The new priority (between 0 and 9).
queue.change-message-priority.reply=True if the message priority was changed, false otherwise.
queue.change-messages-priority=Change the priority of the messages corresponding to the given filter.
queue.change-messages-priority.reply=The number of changed messages.
queue.move-message=Move the message corresponding to the given message-id to another queue
queue.move-message.other-queue-name=The name of the queue to move the message to.
queue.move-message.reject-duplicates=Reject messages identified as duplicate.
queue.move-message.reply=True if the message was moved, false otherwise
queue.move-messages=Move the messages corresponding to the given filter to another queue.
queue.move-messages.reply=The number of moved messages.
queue.list-message-counter=List the message counter details.
queue.list-message-counter.reply=Details of the message counter.
queue.list-message-counter-as-json=List the message counter as a string in JSON format.
queue.list-message-counter-as-json.reply=A string in JSON format.
queue.list-message-counter-as-html=List the message counter as a string in HTML format.
queue.list-message-counter-as-html.reply=A string in HTML format.
queue.list-message-counter-history=List the message counter history.
queue.list-message-counter-history.reply=Details of the message counter history.
queue.list-message-counter-history-as-json=List the message counter history as a string in JSON format.
queue.list-message-counter-history-as-json.reply=A string in JSON format
queue.list-message-counter-history-as-html=List the message counter history.
queue.list-message-counter-history-as-html.reply=A string in HTML format as a string in HTML format.
queue.reset-message-counter=Reset the message counters.
queue.pause=Pause the queue.
queue.resume=Resume the queue.
queue.list-consumers=List all the existing consumers on the queue.
queue.list-consumers.reply=A list, each of whose elements details a queue consumer.
queue.list-consumers-as-json=A string in JSON format.
queue.list-consumers-as-json.reply=A string in JSON format

broadcast-group=A broadcast group is the means by which a server broadcasts connectors over the network.
broadcast-group.add=Add a broadcast group.
broadcast-group.remove=Remove a broadcast group.
broadcast-group.local-bind-address=The local bind address that the datagram socket is bound to. If you have multiple network interfaces on your server, you would specify which one you wish to use for broadcasts by setting this attribute. If this attribute is not specified then the socket will be bound to the wildcard address, an IP address chosen by the kernel.
broadcast-group.local-bind-port=The local port to which the datagram socket is bound. Normally you would just use the default value of -1 which signifies that an anonymous port should be used. This parameter is always specified in conjunction with local-bind-address.
broadcast-group.group-address=The multicast address to which the data will be broadcast. It is a class D IP address in the range 224.0.0.0 to 239.255.255.255, inclusive. The address 224.0.0.0 is reserved and is not available for use.
broadcast-group.group-port=The UDP port number used for broadcasting.
broadcast-group.broadcast-period=The period in milliseconds between consecutive broadcasts.
broadcast-group.connectors=Specifies the names of connectors that will be broadcast.
broadcast-group.socket-binding=The broadcast group socket binding.
broadcast-group.started=Whether the broadcast group is started.
broadcast-group.start=Starts the broadcast group.
broadcast-group.stop=Stops the broadcast group.
broadcast-group.get-connector-pairs-as-json=Returns the pairs of live-backup connectors that are broadcasted by this broadcast group using JSON serialization.

discovery-group=Multicast group to listen to receive broadcast from other servers announcing their connectors.
discovery-group.add=Add a discovery group.
discovery-group.remove=Remove a discovery group.
discovery-group.local-bind-address=The local bind address that the datagram socket is bound to.
discovery-group.group-address=Multicast IP address of the group to listen on.
discovery-group.group-port=UDP port of the multicast group.
discovery-group.refresh-timeout=Period the discovery group waits after receiving the last broadcast from a particular server before removing that server's connector pair entry from its list.
discovery-group.initial-wait-timeout=Period, in ms, to wait for an initial broadcast to give us at least one node in the cluster.
discovery-group.socket-binding=The discovery group socket binding.

bridge=The function of a bridge is to consume messages from a source queue, and forward them to a target address, typically on a different HornetQ server.
bridge.add=Operation adding a bridge.
bridge.remove=Operation removing a bridge.
bridge.check-period=The period (in milliseconds) between client failure check.
bridge.connection-ttl=The maximum time (in milliseconds) for which the connections used by the bridges are considered alive (in the absence of heartbeat).
bridge.queue-name=The unique name of the local queue that the bridge consumes from.
bridge.forwarding-address=The address on the target server that the message will be forwarded to. If a forwarding address is not specified then the original destination of the message will be retained.
bridge.ha=Whether or not this bridge should support high availability. True means it will connect to any available server in a cluster and support failover.
bridge.filter=An optional filter string. If specified then only messages which match the filter expression specified will be forwarded. The filter string follows the HornetQ filter expression syntax described in the HornetQ documentation.
bridge.max-retry-interval=The maximum interval of time used to retry connections
bridge.min-large-message-size=The minimum size (in bytes) for a message before it is considered as a large message.
bridge.transformer-class-name=The name of a user-defined class which implements the org.hornetq.core.server.cluster.Transformer interface.
bridge.retry-interval=The period in milliseconds between subsequent reconnection attempts, if the connection to the target server has failed.
bridge.retry-interval-multiplier=A multiplier to apply to the time since the last retry to compute the time to the next retry. This allows you to implement an exponential backoff between retry attempts.
bridge.reconnect-attempts=The total number of reconnect attempts the bridge will make before giving up and shutting down. A value of -1 signifies an unlimited number of attempts.
bridge.failover-on-server-shutdown=Whether the bridge will attempt to failover onto a backup server (if specified) when the target server is cleanly shutdown rather than crashed.
bridge.use-duplicate-detection=Whether the bridge will automatically insert a duplicate id property into each message that it forwards.
bridge.confirmation-window-size=The confirmation-window-size to use for the connection used to forward messages to the target node.
bridge.user=The user name to use when creating the bridge connection to the remote server. If it is not specified the default cluster user specified by the cluster-user attribute in the root messaging subsystem resource will be used.
bridge.password=The password to use when creating the bridge connection to the remote server. If it is not specified the default cluster password specified by the cluster-password attribute in the root messaging subsystem resource will be used.
bridge.static-connectors=A list of names of statically defined connectors used by this bridge. Must be undefined (null) if 'discovery-group-name' is defined.
bridge.discovery-group-name=The name of the discovery group used by this bridge. Must be undefined (null) if 'static-connectors' is defined.
bridge.started=Whether the bridge is started.
bridge.start=Starts the bridge.
bridge.stop=Stops the bridge.

divert=A messaging resource that allows you to transparently divert messages routed to one address to some other address, without making any changes to any client application logic.
divert.add=Operation adding a divert
divert.remove=Operation removing a divert
divert.routing-name=Routing name of the divert
divert.divert-address=Address to divert from
divert.forwarding-address=Address to divert to
divert.filter=An optional filter string. If specified then only messages which match the filter expression specified will be diverted. The filter string follows the HornetQ filter expression syntax described in the HornetQ documentation.
divert.exclusive=Whether the divert is exclusive, meaning that the message is diverted to the new address, and does not go to the old address at all.
divert.transformer-class-name=The name of a class used to transform the message's body or properties before it is diverted.

cluster-connection=Cluster connections group servers into clusters so that messages can be load balanced between the nodes of the cluster.
cluster-connection.add=Operation adding a cluster connection
cluster-connection.remove=Operation removing a cluster connection
cluster-connection.call-timeout=The timeout (in ms) for remote calls made by the cluster connection.
cluster-connection.check-period=The period (in milliseconds) between client failure check.
cluster-connection.cluster-connection-address=Each cluster connection only applies to messages sent to an address that starts with this value.
cluster-connection.connection-ttl=The maximum time (in milliseconds) for which the connections used by the cluster connections are considered alive (in the absence of heartbeat).
cluster-connection.connector-ref=The confirmation-window-size to use for the connection used to forward messages to a target node.
cluster-connection.retry-interval=The period in milliseconds between subsequent reconnection attempts, if the connection to the target server has failed.
cluster-connection.use-duplicate-detection=Whether the bridge will automatically insert a duplicate id property into each message that it forwards.
cluster-connection.forward-when-no-consumers=Whether messages will be distributed round robin between other nodes of the cluster irrespective of whether there are matching or indeed any consumers on other nodes. If this is set to false (the default) then HornetQ will only forward messages to other nodes of the cluster if the address to which they are being forwarded has queues which have consumers, and if those consumers have message filters (selectors) at least one of those selectors must match the message.
cluster-connection.max-hops=The maximum number of times a message can be forwarded. HornetQ can be configured to also load balance messages to nodes which might be connected to it only indirectly with other HornetQ servers as intermediates in a chain.
cluster-connection.max-retry-interval=The maximum interval of time used to retry connections
cluster-connection.min-large-message-size=The minimum size (in bytes) for a message before it is considered as a large message.
cluster-connection.reconnect-attempts=The total number of reconnect attempts the bridge will make before giving up and shutting down. A value of -1 signifies an unlimited number of attempts.
cluster-connection.retry-interval-multiplier=A multiplier to apply to the time since the last retry to compute the time to the next retry. This allows you to implement an exponential backoff between retry attempts.
cluster-connection.confirmation-window-size=The confirmation-window-size to use for the connection used to forward messages to a target node.
cluster-connection.static-connectors=The statically defined list of connectors to which this cluster connection will make connections. Must be undefined (null) if 'discovery-group-name' is defined.
cluster-connection.topology=The topology of the nodes that this cluster connection is aware of.
cluster-connection.allow-direct-connections-only=Whether, if a node learns of the existence of a node that is more than 1 hop away, we do not create a bridge for direct cluster connection. Only relevant if 'static-connectors' is defined.
cluster-connection.discovery-group-name=The discovery group used to obtain the list of other servers in the cluster to which this cluster connection will make connections. Must be undefined (null) if 'static-connectors' is defined.
cluster-connection.node-id=The node ID used by this cluster connection.
cluster-connection.get-nodes=Returns a map of the nodes connected to this cluster connection, where keys are node IDs and values are the addresses used to connect to the nodes.
cluster-connection.get-nodes.reply=A map where keys are node IDs and values are the addresses used to connect to the nodes.
cluster-connection.get-static-connectors-as-json=Returns the list of static connectors as a string in JSON format.
cluster-connection.started=Whether the cluster connection is started.
cluster-connection.start=Starts the cluster connection.
cluster-connection.stop=Stops the cluster connection.

connector-service=TODO
connector-service.add=Operation adding a connector service
connector-service.remove=Operation removing a connector service
connector-service.factory-class=Class name of the factory class that can instantiate the connector service.
connector-service.param=A key/value pair understood by the connector service's factory-class
connector-service.param.add=Adds a key/value pair understood by the connector service's factory-class
connector-service.param.remove=Removes a key/value pair understood by the connector service's factory-class
connector-service.param.value=Value portion of a key/value pair understood by the connector service's factory-class

factory-class=The factory class.

jndi-binding=The name of the binding for JNDI

#jms stuff
jms=The configuration of the JMS subsystem.
jms.connection-factories=The JMS connection factories.
jms.queues=The JMS queues.
jms.topics=The JMS topics.
jms.pooled-connection-factories=The Managed JMS connection factories.

jms.add=Adds the jms subsystem.

jms-queue=Defines a JMS queue.
jms-queue.add=Add a JMS queue.
jms-queue.remove=Remove a JMS queue.
jms-queue.entries=The jndi names the queue will be bound to.
jms-queue.selector=The queue selector.
jms-queue.durable=Whether the queue is durable or not.
jms-queue.queue-address=The queue address defines what address is used for routing messages.
jms-queue.expiry-address=The address to send expired messages to.
jms-queue.dead-letter-address=The address to send dead messages to.
jms-queue.paused=Whether the queue is paused.
jms-queue.temporary=Whether the queue is temporary.
jms-queue.message-count=The number of messages currently in this queue.
jms-queue.scheduled-count=The number of scheduled messages in this queue.
jms-queue.consumer-count=The number of consumers consuming messages from this queue.
jms-queue.delivering-count=The number of messages that this queue is currently delivering to its consumers.
jms-queue.messages-added=The number of messages added to this queue since it was created.
jms-queue.add-jndi=Adds the queue to another JNDI binding
jms-queue.message.JMSPriority=The message's priority.
jms-queue.message.JMSTimestamp=The message's timestamp, in ms since the epoch.
jms-queue.message.JMSExpiration=The message's expiration time.
jms-queue.message.JMSDeliveryMode=The delivery mode for the message, PERSISTENT or NON_PERSISTENT.
jms-queue.message.JMSMessageID=The message's id.

jms-topic=Defines a JMS topic.
jms-topic.add=Add a JMS topic.
jms-topic.remove=Remove a JMS topic.
jms-topic.entries=The jndi names the topic will be bound to.
jms-topic.topic-address=The address the topic points to.
jms-topic.temporary=Whether the topic is temporary.
jms-topic.message-count=The number of messages currently in this queue.
jms-topic.delivering-count=The number of messages that this queue is currently delivering to its consumers.
jms-topic.messages-added=The number of messages added to this queue since it was created.
jms-topic.durable-message-count=The number of messages for all durable subscribers for this topic.
jms-topic.non-durable-message-count=The number of messages for all non-durable subscribers for this topic.
jms-topic.subscription-count=The number of (durable and non-durable) subscribers for this topic.
jms-topic.durable-subscription-count=The number of durable subscribers for this topic.
jms-topic.non-durable-subscription-count=The number of non-durable subscribers for this topic.
jms-topic.list-all-subscriptions=List all subscriptions.
jms-topic.list-all-subscriptions.reply=A list, each of whose elements describes a single subscription.
jms-topic.list-all-subscriptions-as-json=List all subscriptions as a string in JSON format.
jms-topic.list-all-subscriptions-as-json.reply=A JSON formatted string.
jms-topic.list-durable-subscriptions=List only the durable subscriptions.
jms-topic.list-durable-subscriptions.reply=A list, each of whose elements describes a single subscription.
jms-topic.list-durable-subscriptions-as-json=List only the durable subscriptions, as a string in JSON format.
jms-topic.list-non-durable-subscriptions=List only the non-durable subscriptions.
jms-topic.list-non-durable-subscriptions.reply=A list, each of whose elements describes a single subscription.
jms-topic.list-non-durable-subscriptions-as-json=List only the non-durable subscriptions, as a string in JSON format.
jms-topic.list-subscriptions.queueName=The full name of the queue.
jms-topic.list-subscriptions.clientID=The client id.
jms-topic.list-subscriptions.selector=The queue selector.
jms-topic.list-subscriptions.name=The name of the queue.
jms-topic.list-subscriptions.durable=Whether the queue is durable or not.
jms-topic.list-subscriptions.messageCount=The number of messages currently in this queue.
jms-topic.list-subscriptions.deliveringCount=The number of messages that this queue is currently delivering to its consumers.
jms-topic.list-subscriptions.consumers=The queue consumers.
jms-topic.list-subscriptions.consumers.consumerID=The id of the consumer.
jms-topic.list-subscriptions.consumers.connectionID= The connection id.
jms-topic.list-subscriptions.consumers.sessionID=The consumer's session id.
jms-topic.list-subscriptions.consumers.browseOnly=Whether the consumer is only browsing the queue.
jms-topic.list-subscriptions.consumers.creationTime=Time when the consumer was created, in ms since the epoch.
jms-topic.list-messages-for-subscription=List all the messages for the given subscription.
jms-topic.list-messages-for-subscription.queue-name=The name of the queue representing a subscription
jms-topic.list-messages-for-subscription.reply=A list where each element is a map of message properties to their value.
jms-topic.list-messages-for-subscription-as-json=List all the messages for the given subscription as a string in JSON format.
jms-topic.count-messages-for-subscription=Count the number of messages matching the filter for the given subscription.
jms-topic.client-id=The client ID.
jms-topic.subscription-name=The name of the durable subscription.
jms-topic.filter=A JMS message filter.
jms-topic.drop-durable-subscription=Drop a durable subscription
jms-topic.drop-all-subscriptions=Drop all subscriptions from this topic.
jms-topic.add-jndi=Adds the queue to another JNDI binding

transport-config.param=A parameter
transport-config.param.value=The parameter value
transport-config.param.add=Operation adding a new parameter
transport-config.param.remove=Operation removing an existing parameter
transport-config.param.optional=Optional parameters

connection-factory=Defines a connection factory.
connection-factory.add=Adds a connection factory.
connection-factory.remove=Removes a connection factory.
connection-factory.factory-type=The type of connection factory.
connection-factory.initial-message-packet-size=The initial size of messages created through this factory.

pooled-connection-factory=Defines a managed connection factory.
pooled-connection-factory.add=Adds a managed connection factory.
pooled-connection-factory.remove=Removes managed a connection factory.

connection-factory.auto-group=Whether or not message grouping is automatically used
connection-factory.block-on-acknowledge=True to set block on acknowledge.
connection-factory.block-on-durable-send=True to set block on durable send.
connection-factory.block-on-non-durable-send=True to set block on non durable send.
connection-factory.cache-large-message-client=True to cache large messages.
connection-factory.call-timeout=The call time out.
connection-factory.client-failure-check-period=The client failure check period.
connection-factory.client-id=The client id.
connection-factory.compress-large-messages=Whether large messages should be compressed.
connection-factory.confirmation-window-size=The confirmation window size.
connection-factory.connection-factory=Defines a connection factory.
connection-factory.connection-ttl=The connection ttl.
connection-factory.connector=Defines the connectors. These are stored in a map by connector name (with an undefined value).
connection-factory.consumer-max-rate=The consumer max rate.
connection-factory.consumer-window-size=The consumer window size.
connection-factory.discovery-group-name=The discovery group name.
connection-factory.discovery-initial-wait-timeout=The discovery initial wait time out.
connection-factory.dups-ok-batch-size=The dups ok batch size.
connection-factory.entries=The jndi names the connection factory should be bound to.
connection-factory.failover-on-initial-connection=True to fail over on initial connection.
connection-factory.failover-on-server-shutdown=True to fail over on server shutdown.
connection-factory.group-id=The group id.
connection-factory.ha=Whether the connection factory supports High Availability.
connection-factory.connection-load-balancing-policy-class-name=Name of a class implementing a client-side load balancing policy that a client can use to load balance sessions across different nodes in a cluster.
connection-factory.max-retry-interval=The max retry interval.
connection-factory.min-large-message-size=The min large message size.
connection-factory.pre-acknowledge=True to pre-acknowledge.
connection-factory.producer-max-rate=The producer max rate.
connection-factory.producer-window-size=The producer window size.
connection-factory.reconnect-attempts=The reconnect attempts.
connection-factory.retry-interval=The retry interval.
connection-factory.retry-interval-multiplier=The retry interval multiplier.
connection-factory.scheduled-thread-pool-max-size=The scheduled thread pool max size.
connection-factory.thread-pool-max-size=The thread pool max size.
connection-factory.transaction-batch-size=The transaction batch size.
connection-factory.use-global-pools=True to use global pools.
connection-factory.add-jndi=Adds the factory to another JNDI binding

pooled-connection-factory.auto-group=The autogroup.
pooled-connection-factory.block-on-acknowledge=True to set block on acknowledge.
pooled-connection-factory.block-on-durable-send=True to set block on durable send.
pooled-connection-factory.block-on-non-durable-send=True to set block on non durable send.
pooled-connection-factory.cache-large-message-client=True to cache large messages.
pooled-connection-factory.call-timeout=The call time out.
pooled-connection-factory.client-failure-check-period=The client failure check period.
pooled-connection-factory.client-id=The client id.
pooled-connection-factory.confirmation-window-size=The confirmation window size.
pooled-connection-factory.connection-factory=Defines a connection factory.
pooled-connection-factory.connection-ttl=The connection ttl.
pooled-connection-factory.connector=Defines the connectors. These are stored in a map by connector name (with an undefined value).
pooled-connection-factory.consumer-max-rate=The consumer max rate.
pooled-connection-factory.consumer-window-size=The consumer window size.
pooled-connection-factory.discovery-group-name=The discovery group name.
pooled-connection-factory.discovery-initial-wait-timeout=The discovery initial wait time out.
pooled-connection-factory.dups-ok-batch-size=The dups ok batch size.
pooled-connection-factory.entries=The jndi names the connection factory should be bound to.
pooled-connection-factory.failover-on-initial-connection=True to fail over on initial connection.
pooled-connection-factory.failover-on-server-shutdown=True to fail over on server shutdown.
pooled-connection-factory.group-id=The group id.
pooled-connection-factory.ha=Whether the connection factory supports High Availability.
pooled-connection-factory.connection-load-balancing-policy-class-name=Name of a class implementing a client-side load balancing policy that a client can use to load balance sessions across different nodes in a cluster.
pooled-connection-factory.max-pool-size=The maximum size for the pool
pooled-connection-factory.max-retry-interval=The max retry interval.
pooled-connection-factory.min-large-message-size=The min large message size.
pooled-connection-factory.min-pool-size=The minimum size for the pool
pooled-connection-factory.pre-acknowledge=True to pre-acknowledge.
pooled-connection-factory.producer-max-rate=The producer max rate.
pooled-connection-factory.producer-window-size=The producer window size.
pooled-connection-factory.reconnect-attempts=The reconnect attempts.
pooled-connection-factory.retry-interval=The retry interval.
pooled-connection-factory.retry-interval-multiplier=The retry interval multiplier.
pooled-connection-factory.scheduled-thread-pool-max-size=The scheduled thread pool max size.
pooled-connection-factory.thread-pool-max-size=The thread pool max size.
pooled-connection-factory.transaction-batch-size=The transaction batch size.
pooled-connection-factory.use-global-pools=True to use global pools.
pooled-connection-factory.use-jndi=Use JNDI to locate the destination for incoming connections
pooled-connection-factory.jndi-params=The JNDI params to use for locating the destination for incoming connections.
pooled-connection-factory.use-local-tx=Use a local transaction for incoming sessions
pooled-connection-factory.user=The default username to use with this connection factory. This is only needed when pointing the connection factory to a remote host.
pooled-connection-factory.password=The default password to use with this connection factory. This is only needed when pointing the connection factory to a remote host.
pooled-connection-factory.setup-attempts=The number of times to set up an MDB endpoint
pooled-connection-factory.setup-interval=The interval between attempts at setting up an MDB endpoint.
pooled-connection-factory.transaction=TODO

server-id=The server id.

security-setting=A security setting allows sets of permissions to be defined against queues based on their address.
security-setting.add=Add new security setting.
security-setting.remove=Remove an existing security setting.

security-role=A security role.
security-role.add=Add new security role.
security-role.remove=Remove an existing security role.
security-role.name=The name of a security role.
security-role.send= This permission allows the user to send a message to matching addresses.
security-role.consume=his permission allows the user to consume a message from a queue bound to matching addresses.
security-role.create-durable-queue=This permission allows the user to create a durable queue.
security-role.delete-durable-queue=This permission allows the user to delete a durable queue.
security-role.create-non-durable-queue=This permission allows the user to create a temporary queue.
security-role.delete-non-durable-queue=This permission allows the user to delete a temporary queue.
security-role.manage=This permission allows the user to invoke management operations by sending management messages to the management address.

socket-binding=The socket binding reference.

deployed=Runtime resources exposed by messaging resources included in this deployment.
