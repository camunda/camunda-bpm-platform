<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>cycle-tests</artifactId>
  <name>fox platform EE - Cycle tests</name>

  <parent>
    <groupId>com.camunda.fox.platform</groupId>
    <artifactId>fox-platform-qa</artifactId>
    <version>6.2.0-SNAPSHOT</version>
  </parent>
  
  <properties>
    <was_home>${WAS8_HOME}</was_home>
    <was_profile>${WAS8_PROFILE}</was_profile>
    <was_scope>${WAS8_SCOPE}</was_scope> <!-- eq. ca-meyerNode03Cell -->
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-6.0</artifactId>
      <type>pom</type>
      <scope>provided</scope>
      <version>3.0.0.Beta1</version>
      <exclusions>
        <exclusion>
          <artifactId>xalan</artifactId>
          <groupId>org.apache.xalan</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
        <groupId>com.sun.jersey.contribs</groupId>
        <artifactId>jersey-apache-client4</artifactId>
        <version>1.15</version>
        <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <version>1.15</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>com.camunda.fox.cycle</groupId>
      <artifactId>cycle</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <classifier>core</classifier>
    </dependency>

  </dependencies>
  
  
  <profiles>
  	<profile>
  		<id>jboss</id>
     	<activation>
	      <activeByDefault>true</activeByDefault>
	    </activation>
	    <properties>
    		<jboss.assembly.location>../jboss7-runtime/target/jboss-as-${version.jboss.as}</jboss.assembly.location>
            <jboss.standalone.xml>standalone-h2.xml</jboss.standalone.xml>
  		</properties>  		
		<dependencies>
		  <dependency>
		    <!-- make sure it comes after assembly in the build -->
		     <groupId>com.camunda.fox.platform</groupId>
		     <artifactId>fox-platform-jboss-assembly</artifactId>
		     <version>${project.version}</version>
		     <type>pom</type>
		   </dependency>
            <dependency>
		     <groupId>com.camunda.fox.cycle</groupId>
		     <artifactId>cycle-jboss</artifactId>
		     <version>${project.version}</version>
		     <type>war</type>
		     <scope>test</scope>
		    </dependency>
		 </dependencies>
		
		 <build>
		   <resources>
		     <resource>
		       <directory>src/main/standalone</directory>
		       <filtering>true</filtering>
		     </resource>
		   </resources>
		   <plugins>
		     <plugin>
		       <groupId>org.apache.maven.plugins</groupId>
		       <artifactId>maven-antrun-plugin</artifactId>
		       <executions>
		         <execution>
		           <id>copy-distro</id>
		           <phase>test-compile</phase>
		           <goals>
		             <goal>run</goal>
		           </goals>
		           <configuration>
		             <target unless="maven.test.skip">

                      <!-- copy jboss server runtime -->
                      <mkdir dir="target/jboss-as-${version.jboss.as}"/>                      
		              <copy todir="target/jboss-as-${version.jboss.as}" >
		                 <fileset dir="${jboss.assembly.location}" />
		              </copy>
                       
                      <!-- add cycle.war to jboss deployments directory -->
		              <dependencyfilesets scopes="test" types="war"/>
                      
		              <copy todir="target/jboss-as-${version.jboss.as}/standalone/deployments">
		                <fileset refid="maven.project.dependencies" />
                        <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\3" handledirsep="yes" />
		              </copy>
                                      
                      <!-- we copy the correct configuraiton file to standalone.xml -->
                      <copy file="target/jboss-as-${version.jboss.as}/standalone/configuration/${jboss.standalone.xml}" 
                            tofile="target/jboss-as-${version.jboss.as}/standalone/configuration/standalone.xml"
                            overwrite="true" />
                                                  
                                                 
		            </target>
		          </configuration>
		        </execution>
		      </executions>
		    </plugin>
		                
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <executions>
                <execution>
                  <id>start-container</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>start</goal>
                  </goals>
                </execution>
                <execution>
                  <id>stop-container</id>
                  <phase>post-integration-test</phase>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>
              <configuration>
                <!-- Container configuration -->
                  <container>
                    <type>installed</type>
                    <containerId>jboss71x</containerId>
                    <append>false</append>
                    <home>${project.build.directory}/jboss-as-${version.jboss.as}</home>
                  </container>
                  <configuration>
                    <type>standalone</type>
                    <home>${project.build.directory}/config-jboss</home>
                    <properties>
                      <cargo.servlet.port>38080</cargo.servlet.port>
                    </properties>
                  </configuration>
                  <wait>false</wait>
              </configuration>
            </plugin>
            
		  </plugins>
		</build>
  	</profile>
  	<profile>
  		<id>glassfish</id>
		<properties>
		  <glassfish.server.location>../gf31-runtime/target/glassfish3</glassfish.server.location>
		</properties>
  		
  	    <dependencies>	
		  <dependency>
		    <!-- make sure it comes after assembly in the build -->
			<groupId>com.camunda.fox.platform</groupId>
		    <artifactId>fox-platform-glassfish-assembly</artifactId>
		   	<version>${project.version}</version>
		    <type>pom</type>
		  </dependency>
 		  <dependency>
		    <groupId>com.camunda.fox.cycle</groupId>
		    <artifactId>cycle-glassfish</artifactId>
		    <version>${project.version}</version>
		    <type>war</type>
		    <scope>test</scope>
		  </dependency>
		  
		</dependencies>
		
		<build>
          <resources>
            <resource>
              <directory>src/main/domains</directory>
              <filtering>true</filtering>
            </resource>
          </resources>
		  <plugins>
		    <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-antrun-plugin</artifactId>
		      <executions>
		        <execution>
		          <id>copy-distro</id>
		          <phase>test-compile</phase>
		          <goals>
		            <goal>run</goal>
		          </goals>
		          <configuration>
		            <target unless="maven.test.skip">
		              <copy todir="target/glassfish3">
		                <fileset dir="${glassfish.server.location}" />
		              </copy>
		            </target>
		          </configuration>
		        </execution>
		        <execution>
		          <id>copy-test-dependencies</id>
		          <phase>test-compile</phase>
		          <goals>
		            <goal>run</goal>
		          </goals>
		          <configuration>
		            <target unless="maven.test.skip">
		              <dependencyfilesets scopes="test" types="war"/>
		              
		              <copy todir="target/glassfish3/glassfish/domains/domain1/autodeploy">
		                <fileset refid="maven.project.dependencies" />
		                <regexpmapper from="^(.*)/([^/]+)/([^/]*)$$" to="\3" handledirsep="yes" />
		              </copy>
		                                                         
		            </target>
		          </configuration>
		        </execution>
		      </executions>
		    </plugin>
		    <plugin>
		      <artifactId>maven-resources-plugin</artifactId>
		      <executions>
		        <execution>
		          <id>copy-resources</id>
		          <phase>test-compile</phase>
		          <goals>
		            <goal>copy-resources</goal>
		          </goals>
		          <configuration>
		            <outputDirectory>${project.build.directory}/glassfish3/glassfish/domains</outputDirectory>
		            <resources>          
		              <resource>
		                <directory>src/main/domains</directory>
		                <filtering>true</filtering>
		              </resource>
		            </resources>              
		          </configuration>            
		        </execution>
		      </executions>
		    </plugin>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <executions>
                <execution>
                  <id>start-container</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>start</goal>
                  </goals>
                </execution>
                <execution>
                  <id>stop-container</id>
                  <phase>post-integration-test</phase>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>
              <configuration>
                <!-- Container configuration -->
                  <container>
                    <type>installed</type>
                    <containerId>glassfish3x</containerId>
                    <append>false</append>
                    <home>${project.build.directory}/glassfish3</home>
                  </container>
                  <configuration>
                    <type>existing</type>
                    <home>${project.build.directory}/glassfish3/glassfish/domains</home>
                    <properties>
                        <cargo.servlet.port>38080</cargo.servlet.port>
                        <cargo.glassfish.adminPort>34848</cargo.glassfish.adminPort>
                        <cargo.glassfish.domain.name>domain1</cargo.glassfish.domain.name>
                        <cargo.remote.username>admin</cargo.remote.username>
                        <cargo.remote.password></cargo.remote.password>
                    </properties>
                  </configuration>
                  <wait>false</wait>
              </configuration>
            </plugin> 
		  </plugins>
		</build>  		
  	</profile>
  	<profile>
  		<id>was</id>
		<dependencies>
		  <dependency>
		    <groupId>com.camunda.fox.engine</groupId>
		    <artifactId>fox-engine</artifactId>
		  </dependency>
		  <dependency>
		    <groupId>com.camunda.fox.platform</groupId>
		    <artifactId>fox-platform-api</artifactId>
		  </dependency>
		  <dependency>
		    <groupId>com.camunda.fox.platform</groupId>
		    <artifactId>fox-platform-jobexecutor-api</artifactId>
		    <version>${project.version}</version>
		  </dependency>
		  <dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		  </dependency>
		  <dependency>
		    <groupId>com.fasterxml.uuid</groupId>
		    <artifactId>java-uuid-generator</artifactId>
		  </dependency>
		
		  <dependency>
		    <groupId>com.camunda.fox.platform</groupId>
		    <artifactId>fox-platform-ibm-websphere-ear</artifactId>
		    <version>${project.version}</version>
		    <type>ear</type>
		  </dependency>
		  <dependency>
		    <groupId>com.camunda.fox.platform</groupId>
		    <artifactId>fox-platform-jobexecutor-rar</artifactId>
		    <version>${project.version}</version>
		    <type>rar</type>
		  </dependency>
		  
 		  <dependency>
		    <groupId>com.camunda.fox.cycle</groupId>
		    <artifactId>cycle-was</artifactId>
		    <version>${project.version}</version>
		    <type>war</type>
		    <scope>test</scope>
		  </dependency>
		</dependencies>
		
		<build>
		  <plugins>
		
		    <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-dependency-plugin</artifactId>
		      <executions>
		        <execution>
		          <id>unpack</id>
		          <phase>test-compile</phase>
		          <goals>
		            <goal>unpack</goal>
		          </goals>
		          <configuration>
		            <artifactItems>
		              <artifactItem>
		                <groupId>com.camunda.fox.cycle</groupId>
            		    <artifactId>cycle-was</artifactId>
            		    <version>${project.version}</version>
            		    <type>war</type>
		                <overWrite>false</overWrite>
		                <outputDirectory>${project.build.directory}/cycle-was.war</outputDirectory>
		                <destFileName>cycle-was.war</destFileName>
		              </artifactItem>		            
		            </artifactItems>
		          </configuration>
		        </execution>		        
		      </executions>
		    </plugin>
		
		    <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-antrun-plugin</artifactId>
		      <executions>
		        <execution>
		          <id>compile</id>
		          <phase>test-compile</phase>
		          <configuration>
		            <target>

			          <!-- stop the server-->
			          <exec executable="${was_profile}/bin/stopServer.bat"
			            osfamily="windows" failonerror="false"
			            failifexecutionfails="false">
			            <arg value="server1" />
			          </exec>

			          <exec executable="${was_profile}/bin/stopServer.sh"
			            osfamily="unix" failonerror="false"
			            failifexecutionfails="false">
			            <arg value="server1" />
			          </exec>

			          <!-- replace fox cycle deployment -->

			          <delete>
			            <fileset
			              dir="${was_profile}/installedApps/${was_scope}/cycle-was.ear/cycle-was.war" />
			          </delete>

			          <copy
			            todir="${was_profile}/installedApps/${was_scope}/cycle-was.ear/cycle-was.war"
			            overwrite="true">
			            <fileset
			              dir="${project.build.directory}/cycle-was.war" />
			          </copy>
					
		           	  <!-- start the server -->
		              <exec executable="${was_profile}/bin/startServer.bat"
		                osfamily="windows">
		                <arg value="server1" />
		              </exec>
		              <exec executable="${was_profile}/bin/startServer.sh"
		                osfamily="unix">
		                <arg value="server1" />
		              </exec>
		
		            </target>
		          </configuration>
		          <goals>
		            <goal>run</goal>
		          </goals>
		        </execution>
		      </executions>
		    </plugin>
		  </plugins>
		</build>  		
  	</profile>
  </profiles>

  <build>
      <testResources>
        <testResource>
          <directory>src/test/resources</directory>
        </testResource>
      </testResources>

      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <skipTests>true</skipTests>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.12</version>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
  
      <pluginManagement>
          <plugins>
              <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
              <plugin>
                  <groupId>org.eclipse.m2e</groupId>
                  <artifactId>lifecycle-mapping</artifactId>
                  <version>1.0.0</version>
                  <configuration>
                      <lifecycleMappingMetadata>
                          <pluginExecutions>
                              <pluginExecution>
                                  <pluginExecutionFilter>
                                      <groupId>
                                          org.apache.maven.plugins
                                      </groupId>
                                      <artifactId>
                                          maven-antrun-plugin
                                      </artifactId>
                                      <versionRange>
                                          [1.7,)
                                      </versionRange>
                                      <goals>
                                          <goal>run</goal>
                                      </goals>
                                  </pluginExecutionFilter>
                                  <action>
                                      <ignore></ignore>
                                  </action>
                              </pluginExecution>
                          </pluginExecutions>
                      </lifecycleMappingMetadata>
                  </configuration>
              </plugin>
          </plugins>
      </pluginManagement>
  </build>
</project>