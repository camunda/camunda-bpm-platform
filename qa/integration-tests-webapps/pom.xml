<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-qa-integration-tests-webapps</artifactId>
  <name>camunda BPM - QA Integration Tests - Webapps</name>

  <parent>
    <groupId>org.camunda.bpm.qa</groupId>
    <artifactId>camunda-qa</artifactId>
    <version>7.0.0-SNAPSHOT</version>
  </parent>
  
  <properties>
    <signavio.globaluser>${env.signavio.globaluser}</signavio.globaluser>
    <signavio.globalpassword>${env.signavio.globalpassword}</signavio.globalpassword>
    <signavio.baseurl>${env.signavio.baseurl}</signavio.baseurl>    
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-6.0</artifactId>
      <type>pom</type>
      <scope>provided</scope>
      <version>3.0.0.Beta1</version>
      <exclusions>
        <exclusion>
          <artifactId>xalan</artifactId>
          <groupId>org.apache.xalan</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>2.32.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-server</artifactId>
      <version>2.32.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>1.4.01</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.2.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-apache-client4</artifactId>
      <version>1.15</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <version>1.15</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <classifier>core</classifier>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp-tomcat</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp-glassfish</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.webapp</groupId>
      <artifactId>camunda-webapp-jboss</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.example</groupId>
      <artifactId>camunda-example-invoice</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-rest</artifactId>
      <scope>test</scope>
      <type>jar</type>
      <classifier>classes</classifier>
      <version>${project.version}</version>
    </dependency>

    <!-- db drivers for maven sql -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc6</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc14</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.db2.jcc</groupId>
      <artifactId>db2jcc4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>sqljdbc4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>


  <profiles>
    <profile>
      <id>jboss</id>
      <properties>
        <jboss.runtime>${basedir}/${jboss.runtime.location}</jboss.runtime>
        <http.port>${jboss.http.port}</http.port>
      </properties>
      <dependencies>
        <dependency>
          <!-- make sure it comes after assembly in the build -->
          <groupId>org.camunda.bpm.qa</groupId>
          <artifactId>camunda-qa-jboss-runtime</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>org.camunda.bpm.cycle</groupId>
          <artifactId>camunda-cycle-jboss</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine-rest</artifactId>
          <scope>test</scope>
          <type>war</type>
          <version>${project.version}</version>
        </dependency>        
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- Container configuration -->
              <container>
                <type>installed</type>
                <containerId>jboss71x</containerId>
                <append>false</append>
                <home>${jboss.runtime}</home>
                <timeout>60000</timeout>
              </container>
              <configuration>
                <type>standalone</type>
                <home>${project.build.directory}/config-jboss</home>

                <properties>
                  <cargo.servlet.port>${jboss.http.port}</cargo.servlet.port>
                  <cargo.jboss.ajp.port>${jboss.ajp.port}</cargo.jboss.ajp.port>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>org.camunda.bpm.cycle</groupId>
                  <artifactId>camunda-cycle-jboss</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${jboss.http.port}/cycle</pingURL>
                  <properties>
                    <context>cycle</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm</groupId>
                  <artifactId>camunda-engine-rest</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${jboss.http.port}/engine-rest/engine/default/process-definition</pingURL>
                  <properties>
                    <context>engine-rest</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.webapp</groupId>
                  <artifactId>camunda-webapp-jboss</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${jboss.http.port}/camunda</pingURL>
                  <properties>
                    <context>camunda</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.example</groupId>
                  <artifactId>camunda-example-invoice</artifactId>
                  <type>war</type>
                  <properties>
                    <context>invoice</context>
                  </properties>
                </deployable>
              </deployables>
              <wait>false</wait>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>glassfish</id>
      <properties>
        <glassfish.runtime>${basedir}/${glassfish.runtime.location}</glassfish.runtime>
        <http.port>${glassfish.http.port}</http.port>
      </properties>

      <dependencies>
        <dependency>
          <!-- make sure it comes after the test runtime in the build -->
          <groupId>org.camunda.bpm.qa</groupId>
          <artifactId>camunda-qa-glassfish-runtime</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
        </dependency>   
        
        <dependency>
          <groupId>org.camunda.bpm.cycle</groupId>
          <artifactId>camunda-cycle-glassfish</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>test</scope>
        </dependency>
        
        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine-rest</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>test</scope>
        </dependency>
             
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/glassfish3/glassfish/domains</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/domains</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- Container configuration -->
              <container>
                <type>installed</type>
                <containerId>glassfish3x</containerId>
                <append>false</append>
                <home>${glassfish.runtime}</home>
              </container>
              <configuration>
                <type>existing</type>
                <home>${glassfish.runtime}/glassfish/domains</home>
                <properties>
                  <cargo.servlet.port>${http.port}</cargo.servlet.port>
                  <cargo.glassfish.adminPort>${glassfish.admin.port}</cargo.glassfish.adminPort>
                  <cargo.glassfish.domain.name>domain1</cargo.glassfish.domain.name>
                  <cargo.remote.username>admin</cargo.remote.username>
                  <cargo.remote.password />
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>org.camunda.bpm.cycle</groupId>
                  <artifactId>camunda-cycle-glassfish</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${http.port}/cycle</pingURL>
                  <properties>
                    <context>cycle</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm</groupId>
                  <artifactId>camunda-engine-rest</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${http.port}/engine-rest/engine/default/process-definition</pingURL>
                  <properties>
                    <context>engine-rest</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.webapp</groupId>
                  <artifactId>camunda-webapp-glassfish</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${http.port}/camunda</pingURL>
                  <properties>
                    <context>camunda</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.example</groupId>
                  <artifactId>camunda-example-invoice</artifactId>
                  <type>war</type>
                  <properties>
                    <context>invoice</context>
                  </properties>
                </deployable>
              </deployables>
              <wait>false</wait>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>tomcat</id>
      <properties>
        <tomcat.runtime>${basedir}/${tomcat6.runtime.location}</tomcat.runtime>
        <http.port>${tomcat6.connector.http.port}</http.port>
      </properties>
      <dependencies>
        <dependency>
          <!-- make sure it comes after assembly in the build -->
          <groupId>org.camunda.bpm.qa</groupId>
          <artifactId>camunda-qa-tomcat-runtime</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
        </dependency>
        <dependency>
          <groupId>org.camunda.bpm.cycle</groupId>
          <artifactId>camunda-cycle-tomcat</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine-rest</artifactId>
          <scope>test</scope>
          <type>war</type>
          <classifier>tomcat</classifier>
          <version>${project.version}</version>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- Container configuration -->
              <container>
                <type>installed</type>
                <containerId>tomcat7x</containerId>
                <append>false</append>
                <home>${tomcat.runtime}</home>
              </container>
              <configuration>
                <type>standalone</type>
                <home>${project.build.directory}/config-tomcat</home>
                <properties>
                  <cargo.servlet.port>${tomcat6.connector.http.port}</cargo.servlet.port>
                  <cargo.tomcat.ajp.port>${tomcat6.connector.ajp.port}</cargo.tomcat.ajp.port>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>org.camunda.bpm.cycle</groupId>
                  <artifactId>camunda-cycle-tomcat</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${tomcat6.connector.http.port}/cycle</pingURL>
                  <properties>
                    <context>cycle</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm</groupId>
                  <artifactId>camunda-engine-rest</artifactId>
                  <type>war</type>
                  <classifier>tomcat</classifier>
                  <pingURL>http://localhost:${tomcat6.connector.http.port}/engine-rest/engine/default/process-definition</pingURL>
                  <properties>
                    <context>engine-rest</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.webapp</groupId>
                  <artifactId>camunda-webapp-tomcat</artifactId>
                  <type>war</type>
                  <pingURL>http://localhost:${tomcat6.connector.http.port}/camunda</pingURL>
                  <properties>
                    <context>camunda</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.camunda.bpm.example</groupId>
                  <artifactId>camunda-example-invoice</artifactId>
                  <type>war</type>
                  <properties>
                    <context>invoice</context>
                  </properties>
                </deployable>
              </deployables>
              <wait>false</wait>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>distro</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
              <skipITs>true</skipITs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>webapps-integration</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <id>database-test-config</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy file="${basedir}/src/test/resources/activiti.cfg.xml" tofile="target/test-classes/activiti.cfg.xml" overwrite="true">
                      <filterset>
                        <filter token="@database.url@" value="${database.url}" />
                        <filter token="@database.driver@" value="${database.driver}" />
                        <filter token="@database.user@" value="${database.user}" />
                        <filter token="@database.password@" value="${database.password}" />
                      </filterset>
                    </copy>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- allows dropping all databases -->
    <profile>
      <id>clean-db</id>
      <dependencies>
        <dependency>
          <groupId>org.camunda.bpm.cycle</groupId>
          <artifactId>camunda-cycle-sql-scripts</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-sql-scripts</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm.cycle</groupId>
                      <artifactId>camunda-cycle-sql-scripts</artifactId>
                      <outputDirectory>${project.build.directory}/sql-scripts/cycle</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.camunda.bpm</groupId>
                      <artifactId>camunda-engine</artifactId>
                      <outputDirectory>${project.build.directory}/sql-scripts/engine</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <version>1.5</version>
            <dependencies>
              <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${version.mysql}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${version.oracle11g}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc14</artifactId>
                <version>${version.oracle10g}</version>
              </dependency>
              <dependency>
                <groupId>com.ibm.db2.jcc</groupId>
                <artifactId>db2jcc4</artifactId>
                <version>${version.db2.97}</version>
              </dependency>
              <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>sqljdbc4</artifactId>
                <version>${version.mssql}</version>
              </dependency>
              <dependency>
                <groupId>postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgre}</version>
              </dependency>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
              </dependency>
            </dependencies>
            <configuration>
              <driver>${database.driver}</driver>
              <url>${database.url}</url>
              <username>${database.user}</username>
              <password>${database.password}</password>
            </configuration>
            <executions>
              <execution>
                <id>drop-db-if-present</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- try dropping the DB if it exists. -->
                    <srcFile>${project.build.directory}/sql-scripts/cycle/sql/drop/${database.type}_cycle_${project.version}.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/drop/activiti.${database.type}.drop.engine.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/drop/activiti.${database.type}.drop.identity.sql</srcFile>
                    <srcFile>${project.build.directory}/sql-scripts/engine/org/camunda/bpm/engine/db/drop/activiti.${database.type}.drop.history.sql</srcFile>
                  </srcFiles>
                  <autocommit>true</autocommit>
                  <onError>continue</onError>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <!-- install enhanced artifact -->
          <execution>
            <id>create-test-jar</id>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <forceCreate>true</forceCreate>
            <!--  <includes>
                <include>**/com/camunda/fox/platform/test/util/**/*.class</include>
              </includes> -->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
            <skipTests>true</skipTests>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build
          itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-antrun-plugin
                    </artifactId>
                    <versionRange>
                      [1.7,)
                    </versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>