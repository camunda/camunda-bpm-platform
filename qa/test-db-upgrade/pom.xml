<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>camunda-qa-db-upgrade</artifactId>
  <packaging>jar</packaging>
  <name>camunda BPM - QA - upgrade - test</name>

  <parent>
    <groupId>org.camunda.bpm.qa</groupId>
    <artifactId>camunda-qa</artifactId>
    <version>7.2.0-SNAPSHOT</version>
  </parent>

  <properties>
    <test.version.old>7.1.0-Final</test.version.old>
    <test.version.old.major>7.1</test.version.old.major>
    <test.version.current>${project.version}</test.version.current>
    <mail.server.port>5025</mail.server.port>
  </properties>

  <build>
    <testSourceDirectory>${project.build.directory}/engine-test-sources</testSourceDirectory>
    <testResources>
      <testResource>
        <directory>${project.build.directory}/engine-test-sources</directory>
        <excludes>
          <exclude>**/*.java</exclude>
          <exclude>camunda.cfg.xml</exclude>
        </excludes>
      </testResource>
      <testResource>
        <directory>config</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
  </build>

  <profiles>
    <profile>
      <id>distro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>72</id>
      <properties>
        <test.version.current>${project.version}</test.version.current>
        <test.version.current.major>7.2</test.version.current.major>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.camunda.bpm.distro</groupId>
          <artifactId>camunda-sql-scripts</artifactId>
          <version>${test.version.current}</version>
        </dependency>

        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine</artifactId>
          <version>${test.version.current}</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.camunda.spin</groupId>
          <artifactId>camunda-spin-all</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>upgrade</id>
      <dependencies>
        <dependency>
          <groupId>org.camunda.bpm.distro</groupId>
          <artifactId>camunda-sql-scripts</artifactId>
          <version>${test.version.current}</version>
        </dependency>

        <dependency>
          <groupId>org.camunda.bpm</groupId>
          <artifactId>camunda-engine</artifactId>
          <version>${test.version.current}</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.camunda.spin</groupId>
          <artifactId>camunda-spin-all</artifactId>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>compile</id>
                <phase>generate-test-sources</phase>
                <configuration>
                  <target>

                    <!-- create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db
                      upgrades (yet) for a particular release ) -->

                    <mkdir dir="${project.build.directory}/scripts-current/sql/upgrade/"/>
                    <touch
                      file="${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${test.version.old.major}_to_${test.version.current.major}.sql" />
                    <touch
                      file="${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${test.version.old.major}_to_${test.version.current.major}.sql" />
                    <touch
                      file="${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${test.version.current.major}_patch.sql" />
                    <touch
                      file="${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${test.version.current.major}_patch.sql" />
                    <touch
                      file="${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${test.version.old.major}_patch.sql" />
                    <touch
                      file="${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${test.version.old.major}_patch.sql" />

                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>

            <executions>
              <execution>
                <id>unpack-engine-tests</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm</groupId>
                      <artifactId>camunda-engine</artifactId>
                      <version>${test.version.current}</version>
                      <type>test-jar</type>
                      <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
                <id>unpack-old-scripts</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.camunda.bpm.distro</groupId>
                      <artifactId>camunda-sql-scripts</artifactId>
                      <version>${test.version.old}</version>
                      <outputDirectory>${project.build.directory}/scripts-old</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.camunda.bpm.distro</groupId>
                      <artifactId>camunda-sql-scripts</artifactId>
                      <version>${test.version.current}</version>
                      <outputDirectory>${project.build.directory}/scripts-current</outputDirectory>
                      <overWrite>true</overWrite>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${version.mysql}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${version.oracle11g}</version>
              </dependency>
              <dependency>
                <groupId>com.oracle.jdbc</groupId>
                <artifactId>ojdbc14</artifactId>
                <version>${version.oracle10g}</version>
              </dependency>
              <dependency>
                <groupId>com.ibm.db2.jcc</groupId>
                <artifactId>db2jcc4</artifactId>
                <version>${version.db2.97}</version>
              </dependency>
              <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>sqljdbc4</artifactId>
                <version>${version.mssql}</version>
              </dependency>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgre}</version>
              </dependency>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
              </dependency>
            </dependencies>
            <configuration>
              <driver>${database.driver}</driver>
              <url>${database.url}</url>
              <username>${database.user}</username>
              <password>${database.password}</password>
            </configuration>
            <executions>
              <execution>
                <id>drop-db-if-present</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- first: try dropping the DB -->
                    <srcFile>${project.build.directory}/scripts-current/sql/drop/${database.type}_engine_${test.version.current}.sql</srcFile>
                    <srcFile>${project.build.directory}/scripts-current/sql/drop/${database.type}_identity_${test.version.current}.sql</srcFile>
                  </srcFiles>
                  <autocommit>true</autocommit>
                  <onError>continue</onError>
                </configuration>
              </execution>
              <execution>
                <id>create-old-schema</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- now create old version of the schema -->
                    <srcFile>${project.build.directory}/scripts-old/sql/create/${database.type}_engine_${test.version.old}.sql</srcFile>
                    <srcFile>${project.build.directory}/scripts-old/sql/create/${database.type}_identity_${test.version.old}.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
              <execution>
                <id>patch-old-schema</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- now patch old version of the schema -->
                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${test.version.old.major}_patch.sql</srcFile>
                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${test.version.old.major}_patch.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
              <execution>
                <id>upgrade-db</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- now perform the schema migrations -->
                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${test.version.old.major}_to_${test.version.current.major}.sql</srcFile>
                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${test.version.old.major}_to_${test.version.current.major}.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
              <execution>
                <id>drop-db</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <srcFiles>
                    <!-- finally drop db -->
                    <srcFile>${project.build.directory}/scripts-current/sql/drop/${database.type}_engine_${test.version.current}.sql</srcFile>
                    <srcFile>${project.build.directory}/scripts-current/sql/drop/${database.type}_identity_${test.version.current}.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/*TestCase.java</exclude>

                <exclude>**/ClassPathScannerTest.java</exclude>
                <exclude>**/MultipleClasspathRootsClassPathScannerTest.java</exclude>

                <exclude>**/WSDLImporterTest.java</exclude> <!-- http://jira.codehaus.org/browse/ACT-315 -->
                <exclude>**/JobExecutorTest.java</exclude> <!-- http://jira.codehaus.org/browse/ACT-427 -->
                <exclude>**/HistoricTaskInstanceUpdateTest.java</exclude> <!-- http://jira.codehaus.org/browse/ACT-485 -->
                <exclude>**/RepeatingServiceTaskTest.java</exclude>

                <exclude>**/ProcessDiagramRetrievalTest.java</exclude>
                <!--exclude>**/ManagementServiceTest.java</exclude -->
              </excludes>
              <testFailureIgnore>false</testFailureIgnore>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>

    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.subethamail</groupId>
      <artifactId>subethasmtp-wiser</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
    </dependency>

    <dependency>
      <groupId>org.python</groupId>
      <artifactId>jython</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jruby</groupId>
      <artifactId>jruby-complete</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc6</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc14</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.db2.jcc</groupId>
      <artifactId>db2jcc4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>sqljdbc4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
