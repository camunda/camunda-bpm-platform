<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin.base">

  <resultMap id="metricsResultMap" type="org.camunda.bpm.admin.impl.plugin.base.dto.MetricsAggregatedResultDto">
    <result property="metric" column="NAME_" jdbcType="VARCHAR" />
    <result property="sum" column="SUM_" jdbcType="INTEGER" />
    <result property="subscriptionYear" column="SUBSCRIPTION_YEAR_" jdbcType="INTEGER" />
    <result property="subscriptionMonth" column="SUBSCRIPTION_MONTH_" jdbcType="INTEGER" />
  </resultMap>

  <sql id="extractYear">
    <bind name="extractTimeUnit" value="'YEAR'" />
    ${extractTimeUnitFromDate}
  </sql>

  <sql id="extractMonth">
    <bind name="extractTimeUnit" value="'MONTH'" />
    ${extractTimeUnitFromDate}
  </sql>

  <sql id="extractDay">
    <bind name="extractTimeUnit" value="'DAY'" />
    ${extractTimeUnitFromDate}
  </sql>

  <sql id="selectGroupByCases">
    <if test="groupBy.equals('year')">
       , case
           when <include refid="extractMonth"/> &gt; #{subscriptionMonth} then <include refid="extractYear"/>
           when <include refid="extractMonth"/> = #{subscriptionMonth} and <include refid="extractDay"/> &gt;= #{subscriptionDay}
             then <include refid="extractYear"/>
           else <include refid="extractYear"/> - 1
           end     as SUBSCRIPTION_YEAR_
      </if>
      <if test="groupBy.equals('month')">
       , case
            when <include refid="extractDay"/> &gt;= #{subscriptionDay} or <include refid="extractMonth"/> &gt; 1 then <include refid="extractYear"/>
            else <include refid="extractYear"/> - 1
            end    as SUBSCRIPTION_YEAR_
       , case
           when <include refid="extractDay"/> &gt;= #{subscriptionDay} then <include refid="extractMonth"/>
           else case
                  when <include refid="extractMonth"/> &gt; 1 then <include refid="extractMonth"/> - 1
                  else 12
             end
           end     as SUBSCRIPTION_MONTH_
      </if>
  </sql>

  <select id="selectMetricsAggregated"
          parameterType="org.camunda.bpm.admin.impl.plugin.base.dto.MetricsAggregatedQueryDto"
          resultMap="metricsResultMap">
    <bind name="extractDateColumn" value="'TIMESTAMP_'"/>

    select
      NAME_,
      sum(VALUE_) as SUM_
      <include refid="selectGroupByCases"/>
    from ${prefix}ACT_RU_METER_LOG

    <where>
      1 = 1

      <if test="startDate != null">
        and TIMESTAMP_ &gt;= #{startDate}
      </if>
      <if test="endDate != null">
        and TIMESTAMP_ &lt; #{endDate}
      </if>

      <if test="metrics != null &amp;&amp; metrics.size > 0">
        and NAME_ in
        <foreach item="metric" index="index" collection="metrics"
                 open="(" separator="," close=")">
          #{metric}
        </foreach>
      </if>
    </where>

    <bind name="internalGroupBy" value="'SUBSCRIPTION_YEAR_'"/>
    <if test="groupBy.equals('month')">
      <bind name="internalGroupBy" value="internalGroupBy + ', SUBSCRIPTION_MONTH_'"/>
    </if>
    group by NAME_, ${internalGroupBy}

    <bind name="internalOrderBy" value="internalGroupBy + ' desc'"/>
    ${orderBy}
  </select>

  <select id="selectMetricsAggregatedTU"
          parameterType="org.camunda.bpm.admin.impl.plugin.base.dto.MetricsAggregatedQueryDto"
          resultMap="metricsResultMap">
    <bind name="extractDateColumn" value="'TIMESTAMP_'"/>

    select
      'unique-task-workers' as NAME_,
      count(*)              as SUM_
      <include refid="selectGroupByCases"/>
    from ${prefix}ACT_RU_TASK_METER_LOG

    <where>
      1 = 1

      <if test="startDate != null">
        and TIMESTAMP_ &gt;= #{startDate}
      </if>
      <if test="endDate != null">
        and TIMESTAMP_ &lt; #{endDate}
      </if>
    </where>

    <bind name="internalGroupBy" value="'SUBSCRIPTION_YEAR_'"/>
    <if test="groupBy.equals('month')">
      <bind name="internalGroupBy" value="internalGroupBy + ', SUBSCRIPTION_MONTH_'"/>
    </if>
    group by ${internalGroupBy}

    <bind name="internalOrderBy" value="internalGroupBy + ' desc'"/>
    ${orderBy}
  </select>

</mapper>