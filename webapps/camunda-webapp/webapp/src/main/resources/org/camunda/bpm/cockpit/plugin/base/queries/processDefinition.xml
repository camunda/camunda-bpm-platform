<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cockpit.base">

  <resultMap id="processDefinitionMap" type="org.camunda.bpm.cockpit.impl.plugin.base.dto.ProcessDefinitionDto">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="name" column="NAME_" jdbcType="VARCHAR" />
    <result property="key" column="KEY_" jdbcType="VARCHAR" />
    <result property="version" column="VERSION_" jdbcType="INTEGER" />
    <result property="failedJobs" column="FAILED_JOBS_" jdbcType="INTEGER" />
    
  </resultMap>
  
  <resultMap id="calledProcessDefinitionMap" type="org.camunda.bpm.cockpit.impl.plugin.base.dto.ProcessDefinitionDto">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="key" column="KEY_" jdbcType="VARCHAR" />
    <result property="name" column="NAME_" jdbcType="VARCHAR" />
    <result property="version" column="VERSION_" jdbcType="INTEGER" />
    
    <collection property="calledFromActivityIds" javaType="java.util.ArrayList" ofType="String" >
      <result column="ACT_ID_" jdbcType="VARCHAR" />
    </collection>
  </resultMap>

  <select id="selectProcessDefinitionWithFailedJobs" resultMap="processDefinitionMap">
    select procdef.*,
      (select count(*) FROM ACT_RU_EXECUTION exe, ACT_RU_JOB job
         where exe.PROC_INST_ID_ = job.PROCESS_INSTANCE_ID_ AND
               exe.PROC_DEF_ID_ = procdef.ID_ and job.RETRIES_ = 0) FAILED_JOBS_
    from ACT_RE_PROCDEF procdef
  </select>

  <select id="selectCalledProcessDefinitions" parameterType="org.camunda.bpm.cockpit.impl.plugin.base.query.parameter.ProcessDefinitionQueryParameter"
          resultMap="calledProcessDefinitionMap">
    select RES.ID_, RES.KEY_, RES.NAME_, RES.VERSION_, EXEC2.ACT_ID_
    <include refid="selectCalledProcesses"/>
    group by RES.ID_, RES.KEY_, RES.NAME_, RES.VERSION_, EXEC2.ACT_ID_
    ${orderBy}
  </select>
  
  <sql id="selectCalledProcesses">
    from
      ${prefix}ACT_RE_PROCDEF RES
    inner join
      ${prefix}ACT_RU_EXECUTION EXEC1
    on
      RES.ID_ = EXEC1.PROC_DEF_ID_
    inner join
      ${prefix}ACT_RU_EXECUTION EXEC2
    on
      EXEC1.SUPER_EXEC_ = EXEC2.ID_
      
    <if test="superProcessDefinitionId != null">
    inner join
      ACT_RU_EXECUTION EXEC3
    on
      EXEC2.PROC_INST_ID_ = EXEC3.ID_
    inner join
      ACT_RU_EXECUTION EXEC4
    on
      EXEC3.SUPER_EXEC_ = EXEC4.ID_    
    </if>
    <where>
    
      <!-- parentProcessDefinitionId -->      
      <if test="parentProcessDefinitionId != null">
        EXEC2.PROC_DEF_ID_ = #{parentProcessDefinitionId}
      </if>

      <!-- superProcessDefinitionId -->      
      <if test="superProcessDefinitionId != null">
        and EXEC4.PROC_DEF_ID_ = #{superProcessDefinitionId}
      </if>
      
      <!-- activityIds -->
      <if test="activityIdIn != null &amp;&amp; activityIdIn.length > 0">
        and EXEC2.ACT_ID_ in
        <foreach item="item" index="index" collection="activityIdIn"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
  </sql>

</mapper>