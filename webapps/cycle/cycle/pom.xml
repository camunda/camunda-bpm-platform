<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>camunda-cycle-root</artifactId>
    <groupId>org.camunda.bpm.cycle</groupId>
    <version>7.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>camunda-cycle</artifactId>
  <packaging>war</packaging>
  <name>camunda BPM - cycle - app</name>
  
  <properties>
    <web.resources.override>src/main/runtime/default/webapp</web.resources.override>
    <java.resources.override>src/main/runtime/default/resources</java.resources.override>
    <properties.override>src/main/runtime/default/config.properties</properties.override>
    <netbeans.hint.deploy.server>gfv3ee6</netbeans.hint.deploy.server>
  </properties>
  
  <dependencies>
    <!-- Spring Framework -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
    </dependency>

    <!-- CGLIB for various things including @Transactional and spring-data-jpa -->
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>1.7.0</version>
    </dependency>
    
    <!-- libs needed for jax-rs stuff -->
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>jaxb-api</artifactId>
          <groupId>javax.xml.bind</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-spring</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>spring-core</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-beans</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-context</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-web</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-aop</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.annotation</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- apis -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
      <scope>provided</scope>
    </dependency>

    <!-- jpa 2.0 api -->
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jcl</artifactId>
      <version>1.6.6</version>
    </dependency>

    <!-- Thymeleaf -->
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf</artifactId>
      <version>2.0.12</version>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring3</artifactId>
      <version>2.0.12</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.nekohtml</groupId>
      <artifactId>nekohtml</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>xercesImpl</artifactId>
          <groupId>xerces</groupId>
        </exclusion>
      </exclusions>      
    </dependency>
    <!-- required for i18n with GNU gettext -->
    <dependency>
      <groupId>org.xnap.commons</groupId>
      <artifactId>gettext-commons</artifactId>
      <version>0.9.6</version>
    </dependency>

    <!-- saxon for XSLT transformations (roundtrip) -->
    <dependency>
      <groupId>net.sourceforge.saxon</groupId>
      <artifactId>saxon</artifactId>
      <version>${version.saxon}</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.saxon</groupId>
      <artifactId>saxon</artifactId>
      <version>${version.saxon}</version>
      <classifier>dom</classifier>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.saxon</groupId>
      <artifactId>saxon</artifactId>
      <version>${version.saxon}</version>
      <classifier>xpath</classifier>
    </dependency>

    <!-- commons vfs for fs connector -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-vfs2</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kubek2k</groupId>
      <artifactId>springockito-annotations</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit-dep</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <scope>test</scope>
    </dependency>
    
    <!-- required for SignavioClient -->
    <dependency>
      <groupId>org.camunda.bpm.cycle</groupId>
      <artifactId>camunda-cycle-httpclient</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.6</version>
    </dependency>
    
    <!-- required for SignavioConnectorIT -->
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>spring-beans</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!-- required for SvnConnector -->
    <dependency>
      <groupId>org.tigris.subversion</groupId>
      <artifactId>svnclientadapter</artifactId>
      <version>0.9.100</version>
    </dependency>
    <dependency>
      <groupId>org.tmatesoft.svnkit</groupId>
      <artifactId>svnkit</artifactId>
      <version>1.3.4</version>
    </dependency>
    <dependency>
      <groupId>org.tmatesoft.svnkit</groupId>
      <artifactId>svnkit-javahl</artifactId>
      <version>1.3.4</version>
    </dependency>
    
    <!-- for testing the email service -->
    <dependency>
      <groupId>org.subethamail</groupId>
      <artifactId>subethasmtp-wiser</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- encryption library -->
    <dependency>
      <groupId>org.jasypt</groupId>
      <artifactId>jasypt</artifactId>
      <version>1.8</version>
    </dependency>
      
  </dependencies>

  <build>
    <finalName>cycle</finalName>
    <filters>
      <filter>src/test/resources/config/test.properties</filter>
      <filter>${properties.override}</filter>
    </filters>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>${java.resources.override}</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/test/javascript</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>create-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <classifier>core</classifier>
              <includes>
                <include>**/org/camunda/bpm/cycle/**</include>
                <include>**/org/camunda/bpm/cycle/web/dto/*</include>
              </includes>
              <excludes>
                <exclude>**/org/camunda/bpm/cycle/web/*</exclude>
                <exclude>**/org/camunda/bpm/cycle/web/filter/**</exclude>
                <exclude>**/org/camunda/bpm/cycle/web/jaxrs/**</exclude>
                <exclude>**/org/camunda/bpm/cycle/web/service/**</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>create-test-jar</id>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <classifier>test</classifier>
              <includes>
                <include>**/org/camunda/bpm/cycle/connector/test/util/RepositoryUtil.*</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <filtering>true</filtering>
              <directory>${web.resources.override}</directory>
            </resource>
            <resource>
              <filtering>true</filtering>
              <directory>src/main/webapp</directory>
              <!-- no filtering for favicon because linux destroys images through carriage return -->
              <excludes>
                <exclude>assets/img/favicon.ico</exclude>
              </excludes>
            </resource>
          </webResources>
          <archive>
            <manifest>
              <!-- Maven project version number -->
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <runOrder>alphabetical</runOrder>
          <excludes>
            <!-- skip signavio connector test in default profile -->
            <exclude>**/SignavioConnectorTest.java</exclude>
          </excludes>
        </configuration>
      </plugin>
         
    </plugins>
  </build>
  
  <profiles>
    
    <profile>
      <id>distro</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/AbstractConnectorTestBase.java</exclude>
                <exclude>**/SvnConnectorTest.java</exclude>
                <exclude>**/VfsConnectorTest.java</exclude>
                <exclude>**/SignavioConnectorTest.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!-- enables signavio integration test -->
    <profile>
      <id>signavio</id>
      <build>
        <plugins>          
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludes>
                 <exclude>none</exclude>
              </excludes>
              <includes>
                  <include>**/SignavioConnectorTest.java</include>
              </includes>              
            </configuration>
            <executions>
              <execution>
                <id>test-signavio-connector</id>
                <phase>test</phase>
                <goals>
                  <goal>test</goal>
                </goals>                
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/SignavioClientProxyIT.java</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <!-- javax.persistence -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>proxy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <includes>
                <include>**/SignavioClientProxyIT.java</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <!-- javax.persistence -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>js-test</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.searls</groupId>
            <artifactId>jasmine-maven-plugin</artifactId>
            <version>1.2.0.1-SNAPSHOT</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <jsSrcDir>${project.basedir}/src/main/webapp/assets/js</jsSrcDir>
              <jsTestSrcDir>${project.basedir}/src/test/javascript</jsTestSrcDir>
              <include>*_spec.js</include>
              <preloadSources>
                <!-- some base lib -->
                <source>lib/jquery-1.7.2.min.js</source>
                <source>lib/bootstrap/bootstrap.js</source>
                <source>lib/angular/angular.js</source>
                <source>lib/angular/angular-resource.js</source>
                <source>lib/angular/angular-mocks.js</source>
              </preloadSources>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>tomcat</id>
      <dependencies>
    
        <!-- dependencies only used for testing (not added to cycle-tomcat.war in distribution) -->
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </dependency>
    
        <dependency>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
        </dependency>

        <!-- Java EE APIs not provided on tomcat -->
        <dependency>
          <groupId>org.hibernate.javax.persistence</groupId>
          <artifactId>hibernate-jpa-2.0-api</artifactId>
        </dependency>
    
        <dependency>
          <groupId>org.glassfish</groupId>
          <artifactId>javax.annotation</artifactId>
        </dependency>
    
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
          <version>1</version>
        </dependency>
    
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
        </dependency>
    
        <dependency>
          <groupId>cglib</groupId>
          <artifactId>cglib</artifactId>
        </dependency>
        <!-- apache commons -->
        <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </dependency>
        <!-- nekohtml -->
        <dependency>
          <groupId>net.sourceforge.nekohtml</groupId>
          <artifactId>nekohtml</artifactId>
        </dependency>   
        <dependency>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-json</artifactId>
        </dependency>
        <dependency>
          <groupId>com.sun.jersey.contribs</groupId>
          <artifactId>jersey-spring</artifactId>
          <exclusions>
            <exclusion>
              <artifactId>spring-core</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-beans</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-context</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-web</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-aop</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>asm</artifactId>
              <groupId>asm</groupId>
            </exclusion>
          </exclusions>
        </dependency>
              
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <!-- required for i18n with GNU gettext -->
            <!-- run 'mvn gettext:gettext gettext:merge gettext:dist' to update po 
              files and generate a updated message bundle class -->
            <groupId>org.xnap.commons</groupId>
            <artifactId>maven-gettext-plugin</artifactId>
            <version>1.2.3</version>
            <configuration>
              <!-- Unix shellscript that runs xgettext and parses views -->
              <xgettextCmd>${basedir}/src/main/po/xgettext.sh</xgettextCmd>
              <!-- directory, into which message catalogs will be generated -->
              <poDirectory>${basedir}/src/main/po</poDirectory>
              <!-- same as AbstractI18n.getMessageBundleName() -->
              <targetBundle>i18n.Messages</targetBundle>
              <!-- directory, into which resource bundles will be generated -->
              <outputDirectory>${basedir}/src/main/resources</outputDirectory>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <version>2.0-beta-1</version>
            <executions>
              <execution>
                <id>tomcat-run</id>
                <goals>
                  <goal>exec-war-only</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <path>cycle</path>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <maven.tomcat.additionalConfigFilesDir>${basedir}/src/main/runtime/tomcat/config</maven.tomcat.additionalConfigFilesDir>
      </properties>
    </profile>
    <profile>
      <id>glassfish</id>
      <dependencies>
        <!-- javax.persistence -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <exclusions>
            <exclusion>
              <groupId>org.javassist</groupId>
              <artifactId>javassist</artifactId>        
            </exclusion>
          </exclusions>          
        </dependency>
        <dependency>
          <groupId>cglib</groupId>
          <artifactId>cglib</artifactId>
        </dependency>
        <dependency>
          <groupId>com.sun.jersey.contribs</groupId>
          <artifactId>jersey-spring</artifactId>
          <exclusions>
            <exclusion>
              <groupId>com.sun.jersey</groupId>
              <artifactId>jersey-core</artifactId>
            </exclusion>        
            <exclusion>
              <groupId>asm</groupId>
              <artifactId>asm</artifactId>
            </exclusion>        
            <exclusion>
              <artifactId>spring-core</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-beans</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-context</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-web</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-aop</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
          </exclusions>
        </dependency>
        <!-- nekohtml -->
        <dependency>
          <groupId>net.sourceforge.nekohtml</groupId>
          <artifactId>nekohtml</artifactId>
          <exclusions>
            <exclusion>
              <groupId>xml-apis</groupId>
              <artifactId>xml-apis</artifactId>          
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </dependency>
      </dependencies>
      <properties>
        <web.resources.override>src/main/runtime/glassfish/webapp</web.resources.override>
        <java.resources.override>src/main/runtime/glassfish/resources</java.resources.override>
      </properties>
    </profile>
    <profile>
      <id>jboss</id>
      <dependencies>
        <dependency>
          <groupId>cglib</groupId>
          <artifactId>cglib</artifactId>
        </dependency>
        <dependency>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-json</artifactId>
        </dependency>
        <dependency>
          <groupId>com.sun.jersey.contribs</groupId>
          <artifactId>jersey-spring</artifactId>
          <exclusions>
            <exclusion>
              <artifactId>spring-core</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-beans</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-context</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-web</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>spring-aop</artifactId>
              <groupId>org.springframework</groupId>
            </exclusion>
            <exclusion>
              <artifactId>asm</artifactId>
              <groupId>asm</groupId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <properties>
        <web.resources.override>src/main/runtime/jboss/webapp</web.resources.override>
        <java.resources.override>src/main/runtime/jboss/resources</java.resources.override>
        <properties.override>src/main/runtime/jboss/config/database.properties</properties.override>
      </properties>
      <build>
        <plugins>         
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <archive>
                <manifest>
                  <!-- Maven project version number -->
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                </manifest>
                <manifestEntries>
                  <Dependencies>org.hibernate,org.hibernate.envers,org.hibernate.validator,org.apache.xerces,org.apache.commons.io</Dependencies>
                </manifestEntries>
              </archive>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>   
  </profiles>
  
  
</project>
